,,
define('DOING_AJAX' true);,define('DOING_AJAX' true);,define('DOING_AJAX' true);
define('WP_ADMIN' true);,define('WP_ADMIN' true);,define('WP_ADMIN' true);
,,
if ( ! isset( $_REQUEST['action'] ) ),if ( ! isset( $_REQUEST['action'] ) ),if ( ! isset( $_REQUEST['action'] ) )
die('-1');,die('-1');,die('-1');
// Require an action parameter,// Require an action parameter,// Require an action parameter
if ( empty($_REQUEST['action']) ),if ( empty($_REQUEST['action']) ),if ( empty($_REQUEST['action']) )
die('-1');,die('-1');,die('-1');
,,
// Load libraries,// Load libraries,// Load libraries
require_once('../wp-load.php');,require_once('../wp-load.php');,require_once('../wp-load.php');
,,
require_once('./includes/admin.php');,require_once('./includes/admin.php');,require_once('./includes/admin.php');
require_once('./includes/ajax-actions.php');,require_once('./includes/ajax-actions.php');,require_once('./includes/ajax-actions.php');
@header('Content-Type: text/html; charset=' . get_option('blog_charset'));,@header('Content-Type: text/html; charset=' . get_option('blog_charset'));,@header('Content-Type: text/html; charset=' . get_option('blog_charset'));
send_nosniff_header();,send_nosniff_header();,send_nosniff_header();
,,
do_action('admin_init');,do_action('admin_init');,do_action('admin_init');
// Handle ajax actions,// Handle ajax actions,// Handle ajax actions
do_action( 'admin_init' );,do_action( 'admin_init' );,do_action( 'admin_init' );
,,
if ( ! is_user_logged_in() ) {,if ( ! is_user_logged_in() ) {,if ( ! is_user_logged_in() ) {
$core_actions = array(,$core_actions = array(,$core_actions = array(
'fetch-list' 'ajax-tag-search' 'compression-test' 'imgedit-preview','fetch-list' 'ajax-tag-search' 'compression-test' 'imgedit-preview','fetch-list' 'ajax-tag-search' 'compression-test' 'imgedit-preview'
'menu-quick-search' 'oembed_cache' 'image-editor' 'delete-comment','menu-quick-search' 'oembed_cache' 'image-editor' 'delete-comment','menu-quick-search' 'oembed_cache' 'image-editor' 'delete-comment'
'delete-tag' 'delete-link' 'delete-meta' 'delete-post' 'trash-post','delete-tag' 'delete-link' 'delete-meta' 'delete-post' 'trash-post','delete-tag' 'delete-link' 'delete-meta' 'delete-post' 'trash-post'
'untrash-post' 'delete-page' 'dim-comment' 'add-link-category' 'add-tag','untrash-post' 'delete-page' 'dim-comment' 'add-link-category' 'add-tag','untrash-post' 'delete-page' 'dim-comment' 'add-link-category' 'add-tag'
'get-tagcloud' 'get-comments' 'replyto-comment' 'edit-comment' 'add-menu-item','get-tagcloud' 'get-comments' 'replyto-comment' 'edit-comment' 'add-menu-item','get-tagcloud' 'get-comments' 'replyto-comment' 'edit-comment' 'add-menu-item'
'add-meta' 'add-user' 'autosave' 'closed-postboxes' 'hidden-columns','add-meta' 'add-user' 'autosave' 'closed-postboxes' 'hidden-columns','add-meta' 'add-user' 'autosave' 'closed-postboxes' 'hidden-columns'
'update-welcome-panel' 'menu-get-metabox' 'wp-link-ajax' 'menu-locations-save','update-welcome-panel' 'menu-get-metabox' 'wp-link-ajax' 'menu-locations-save','update-welcome-panel' 'menu-get-metabox' 'wp-link-ajax' 'menu-locations-save'
'meta-box-order' 'get-permalink' 'sample-permalink' 'inline-save' 'inline-save-tax','meta-box-order' 'get-permalink' 'sample-permalink' 'inline-save' 'inline-save-tax','meta-box-order' 'get-permalink' 'sample-permalink' 'inline-save' 'inline-save-tax'
'find_posts' 'widgets-order' 'save-widget' 'set-post-thumbnail' 'date_format','find_posts' 'widgets-order' 'save-widget' 'set-post-thumbnail' 'date_format','find_posts' 'widgets-order' 'save-widget' 'set-post-thumbnail' 'date_format'
'time_format' 'wp-fullscreen-save-post' 'wp-remove-post-lock' 'dismiss-wp-pointer','time_format' 'wp-fullscreen-save-post' 'wp-remove-post-lock' 'dismiss-wp-pointer','time_format' 'wp-fullscreen-save-post' 'wp-remove-post-lock' 'dismiss-wp-pointer'
);,);,);
,,
if ( isset( $_POST['action'] ) && $_POST['action'] == 'autosave' ) {,if ( isset( $_POST['action'] ) && $_POST['action'] == 'autosave' ) {,if ( isset( $_POST['action'] ) && $_POST['action'] == 'autosave' ) {
$id = isset($_POST['post_ID'])? (int) $_POST['post_ID'] : 0;,$id = isset($_POST['post_ID'])? (int) $_POST['post_ID'] : 0;,$id = isset($_POST['post_ID'])? (int) $_POST['post_ID'] : 0;
,,
if ( ! $id ),if ( ! $id ),if ( ! $id )
die('-1');,die('-1');,die('-1');
,,
$message = sprintf( __(' <strong>ALERT: You are logged out!</strong> Could not save draft. Please log in again.') wp_login_url() );,$message = sprintf( __(' <strong>ALERT: You are logged out!</strong> Could not save draft. Please log in again.') wp_login_url() );,$message = sprintf( __(' <strong>ALERT: You are logged out!</strong> Could not save draft. Please log in again.') wp_login_url() );
$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(
'what' => 'autosave','what' => 'autosave','what' => 'autosave'
'id' => $id,'id' => $id,'id' => $id
'data' => $message,'data' => $message,'data' => $message
) );,) );,) );
$x->send();,$x->send();,$x->send();
},},}
,,
if ( !empty( $_REQUEST['action'] ) ),if ( !empty( $_REQUEST['action'] ) ),if ( !empty( $_REQUEST['action'] ) )
do_action( 'wp_ajax_nopriv_' . $_REQUEST['action'] );,do_action( 'wp_ajax_nopriv_' . $_REQUEST['action'] );,do_action( 'wp_ajax_nopriv_' . $_REQUEST['action'] );
,,
die('-1');,die('-1');,die('-1');
foreach ( $core_actions as $action ) {,foreach ( $core_actions as $action ) {,foreach ( $core_actions as $action ) {
$callback = str_replace( '-' '_' $action );,$callback = str_replace( '-' '_' $action );,$callback = str_replace( '-' '_' $action );
add_action( 'wp_ajax_' . $action 'wp_ajax_' . $callback 1 );,add_action( 'wp_ajax_' . $action 'wp_ajax_' . $callback 1 );,add_action( 'wp_ajax_' . $action 'wp_ajax_' . $callback 1 );
},},}
unset( $core_actions $action $callback );,unset( $core_actions $action $callback );,unset( $core_actions $action $callback );
,,
if ( isset( $_GET['action'] ) ) :,if ( isset( $_GET['action'] ) ) :,if ( isset( $_GET['action'] ) ) :
switch ( $action = $_GET['action'] ) :,switch ( $action = $_GET['action'] ) :,switch ( $action = $_GET['action'] ) :
case 'fetch-list' :,case 'fetch-list' :,case 'fetch-list' :
add_action( 'wp_ajax_nopriv_autosave' 'wp_ajax_nopriv_autosave' 1 );,add_action( 'wp_ajax_nopriv_autosave' 'wp_ajax_nopriv_autosave' 1 );,add_action( 'wp_ajax_nopriv_autosave' 'wp_ajax_nopriv_autosave' 1 );
,,
$list_class = $_GET['list_args']['class'];,$list_class = $_GET['list_args']['class'];,$list_class = $_GET['list_args']['class'];
check_ajax_referer( "fetch-list-$list_class" '_ajax_fetch_list_nonce' );,check_ajax_referer( "fetch-list-$list_class" '_ajax_fetch_list_nonce' );,check_ajax_referer( "fetch-list-$list_class" '_ajax_fetch_list_nonce' );
if ( is_user_logged_in() ),if ( is_user_logged_in() ),if ( is_user_logged_in() )
do_action( 'wp_ajax_' . $_REQUEST['action'] $_REQUEST['action'] ); // Authenticated actions,do_action( 'wp_ajax_' . $_REQUEST['action'] $_REQUEST['action'] ); // Authenticated actions,do_action( 'wp_ajax_' . $_REQUEST['action'] $_REQUEST['action'] ); // Authenticated actions
else,else,else
do_action( 'wp_ajax_nopriv_' . $_REQUEST['action'] $_REQUEST['action'] ); // Non-admin actions,do_action( 'wp_ajax_nopriv_' . $_REQUEST['action'] $_REQUEST['action'] ); // Non-admin actions,do_action( 'wp_ajax_nopriv_' . $_REQUEST['action'] $_REQUEST['action'] ); // Non-admin actions
,,
$current_screen = convert_to_screen( $_GET['list_args']['screen']['id'] );,$current_screen = convert_to_screen( $_GET['list_args']['screen']['id'] );,$current_screen = convert_to_screen( $_GET['list_args']['screen']['id'] );
,,
define( 'WP_NETWORK_ADMIN' $current_screen->is_network );,define( 'WP_NETWORK_ADMIN' $current_screen->is_network );,define( 'WP_NETWORK_ADMIN' $current_screen->is_network );
define( 'WP_USER_ADMIN' $current_screen->is_user );,define( 'WP_USER_ADMIN' $current_screen->is_user );,define( 'WP_USER_ADMIN' $current_screen->is_user );
,,
$wp_list_table = _get_list_table( $list_class );,$wp_list_table = _get_list_table( $list_class );,$wp_list_table = _get_list_table( $list_class );
if ( ! $wp_list_table ),if ( ! $wp_list_table ),if ( ! $wp_list_table )
die( '0' );,die( '0' );,die( '0' );
,,
if ( ! $wp_list_table->ajax_user_can() ),if ( ! $wp_list_table->ajax_user_can() ),if ( ! $wp_list_table->ajax_user_can() )
die( '-1' );,die( '-1' );,die( '-1' );
,,
$wp_list_table->ajax_response();,$wp_list_table->ajax_response();,$wp_list_table->ajax_response();
,,
die( '0' );,die( '0' );,die( '0' );
break;,break;,break;
case 'ajax-tag-search' :,case 'ajax-tag-search' :,case 'ajax-tag-search' :
if ( isset( $_GET['tax'] ) ) {,if ( isset( $_GET['tax'] ) ) {,if ( isset( $_GET['tax'] ) ) {
$taxonomy = sanitize_key( $_GET['tax'] );,$taxonomy = sanitize_key( $_GET['tax'] );,$taxonomy = sanitize_key( $_GET['tax'] );
$tax = get_taxonomy( $taxonomy );,$tax = get_taxonomy( $taxonomy );,$tax = get_taxonomy( $taxonomy );
if ( ! $tax ),if ( ! $tax ),if ( ! $tax )
die( '0' );,die( '0' );,die( '0' );
if ( ! current_user_can( $tax->cap->assign_terms ) ),if ( ! current_user_can( $tax->cap->assign_terms ) ),if ( ! current_user_can( $tax->cap->assign_terms ) )
die( '-1' );,die( '-1' );,die( '-1' );
} else {,} else {,} else {
die('0');,die('0');,die('0');
},},}
,,
$s = stripslashes( $_GET['q'] );,$s = stripslashes( $_GET['q'] );,$s = stripslashes( $_GET['q'] );
,,
if ( false !== strpos( $s '' ) ) {,if ( false !== strpos( $s '' ) ) {,if ( false !== strpos( $s '' ) ) {
$s = explode( '' $s );,$s = explode( '' $s );,$s = explode( '' $s );
$s = $s[count( $s ) - 1];,$s = $s[count( $s ) - 1];,$s = $s[count( $s ) - 1];
},},}
$s = trim( $s );,$s = trim( $s );,$s = trim( $s );
if ( strlen( $s ) < 2 ),if ( strlen( $s ) < 2 ),if ( strlen( $s ) < 2 )
die; // require 2 chars for matching,die; // require 2 chars for matching,die; // require 2 chars for matching
,,
$results = $wpdb->get_col( $wpdb->prepare( "SELECT t.name FROM $wpdb->term_taxonomy AS tt INNER JOIN $wpdb->terms AS t ON tt.term_id = t.term_id WHERE tt.taxonomy = %s AND t.name LIKE (%s)" $taxonomy '%' . like_escape( $s ) . '%' ) );,$results = $wpdb->get_col( $wpdb->prepare( "SELECT t.name FROM $wpdb->term_taxonomy AS tt INNER JOIN $wpdb->terms AS t ON tt.term_id = t.term_id WHERE tt.taxonomy = %s AND t.name LIKE (%s)" $taxonomy '%' . like_escape( $s ) . '%' ) );,$results = $wpdb->get_col( $wpdb->prepare( "SELECT t.name FROM $wpdb->term_taxonomy AS tt INNER JOIN $wpdb->terms AS t ON tt.term_id = t.term_id WHERE tt.taxonomy = %s AND t.name LIKE (%s)" $taxonomy '%' . like_escape( $s ) . '%' ) );
,,
echo join( $results "\n" );,echo join( $results "\n" );,echo join( $results "\n" );
die;,die;,die;
break;,break;,break;
case 'wp-compression-test' :,case 'wp-compression-test' :,case 'wp-compression-test' :
if ( !current_user_can( 'manage_options' ) ),if ( !current_user_can( 'manage_options' ) ),if ( !current_user_can( 'manage_options' ) )
die('-1');,die('-1');,die('-1');
,,
if ( ini_get('zlib.output_compression') || 'ob_gzhandler' == ini_get('output_handler') ) {,if ( ini_get('zlib.output_compression') || 'ob_gzhandler' == ini_get('output_handler') ) {,if ( ini_get('zlib.output_compression') || 'ob_gzhandler' == ini_get('output_handler') ) {
update_site_option('can_compress_scripts' 0);,update_site_option('can_compress_scripts' 0);,update_site_option('can_compress_scripts' 0);
die('0');,die('0');,die('0');
},},}
,,
if ( isset($_GET['test']) ) {,if ( isset($_GET['test']) ) {,if ( isset($_GET['test']) ) {
header( 'Expires: Wed 11 Jan 1984 05:00:00 GMT' );,header( 'Expires: Wed 11 Jan 1984 05:00:00 GMT' );,header( 'Expires: Wed 11 Jan 1984 05:00:00 GMT' );
header( 'Last-Modified: ' . gmdate( 'D d M Y H:i:s' ) . ' GMT' );,header( 'Last-Modified: ' . gmdate( 'D d M Y H:i:s' ) . ' GMT' );,header( 'Last-Modified: ' . gmdate( 'D d M Y H:i:s' ) . ' GMT' );
header( 'Cache-Control: no-cache must-revalidate max-age=0' );,header( 'Cache-Control: no-cache must-revalidate max-age=0' );,header( 'Cache-Control: no-cache must-revalidate max-age=0' );
header( 'Pragma: no-cache' );,header( 'Pragma: no-cache' );,header( 'Pragma: no-cache' );
header('Content-Type: application/x-javascript; charset=UTF-8');,header('Content-Type: application/x-javascript; charset=UTF-8');,header('Content-Type: application/x-javascript; charset=UTF-8');
$force_gzip = ( defined('ENFORCE_GZIP') && ENFORCE_GZIP );,$force_gzip = ( defined('ENFORCE_GZIP') && ENFORCE_GZIP );,$force_gzip = ( defined('ENFORCE_GZIP') && ENFORCE_GZIP );
$test_str = '"wpCompressionTest Lorem ipsum dolor sit amet consectetuer mollis sapien urna ut a. Eu nonummy condimentum fringilla tempor pretium platea vel nibh netus Maecenas. Hac molestie amet justo quis pellentesque est ultrices interdum nibh Morbi. Cras mattis pretium Phasellus ante ipsum ipsum ut sociis Suspendisse Lorem. Ante et non molestie. Porta urna Vestibulum egestas id congue nibh eu risus gravida sit. Ac augue auctor Ut et non a elit massa id sodales. Elit eu Nulla at nibh adipiscing mattis lacus mauris at tempus. Netus nibh quis suscipit nec feugiat eget sed lorem et urna. Pellentesque lacus at ut massa consectetuer ligula ut auctor semper Pellentesque. Ut metus massa nibh quam Curabitur molestie nec mauris congue. Volutpat molestie elit justo facilisis neque ac risus Ut nascetur tristique. Vitae sit lorem tellus et quis Phasellus lacus tincidunt nunc Fusce. Pharetra wisi Suspendisse mus sagittis libero lacinia Integer consequat ac Phasellus. Et urna ac cursus tortor aliquam Aliquam amet tellus volutpat Vestibulum. Justo interdum condimentum In augue congue tellus sollicitudin Quisque quis nibh."';,$test_str = '"wpCompressionTest Lorem ipsum dolor sit amet consectetuer mollis sapien urna ut a. Eu nonummy condimentum fringilla tempor pretium platea vel nibh netus Maecenas. Hac molestie amet justo quis pellentesque est ultrices interdum nibh Morbi. Cras mattis pretium Phasellus ante ipsum ipsum ut sociis Suspendisse Lorem. Ante et non molestie. Porta urna Vestibulum egestas id congue nibh eu risus gravida sit. Ac augue auctor Ut et non a elit massa id sodales. Elit eu Nulla at nibh adipiscing mattis lacus mauris at tempus. Netus nibh quis suscipit nec feugiat eget sed lorem et urna. Pellentesque lacus at ut massa consectetuer ligula ut auctor semper Pellentesque. Ut metus massa nibh quam Curabitur molestie nec mauris congue. Volutpat molestie elit justo facilisis neque ac risus Ut nascetur tristique. Vitae sit lorem tellus et quis Phasellus lacus tincidunt nunc Fusce. Pharetra wisi Suspendisse mus sagittis libero lacinia Integer consequat ac Phasellus. Et urna ac cursus tortor aliquam Aliquam amet tellus volutpat Vestibulum. Justo interdum condimentum In augue congue tellus sollicitudin Quisque quis nibh."';,$test_str = '"wpCompressionTest Lorem ipsum dolor sit amet consectetuer mollis sapien urna ut a. Eu nonummy condimentum fringilla tempor pretium platea vel nibh netus Maecenas. Hac molestie amet justo quis pellentesque est ultrices interdum nibh Morbi. Cras mattis pretium Phasellus ante ipsum ipsum ut sociis Suspendisse Lorem. Ante et non molestie. Porta urna Vestibulum egestas id congue nibh eu risus gravida sit. Ac augue auctor Ut et non a elit massa id sodales. Elit eu Nulla at nibh adipiscing mattis lacus mauris at tempus. Netus nibh quis suscipit nec feugiat eget sed lorem et urna. Pellentesque lacus at ut massa consectetuer ligula ut auctor semper Pellentesque. Ut metus massa nibh quam Curabitur molestie nec mauris congue. Volutpat molestie elit justo facilisis neque ac risus Ut nascetur tristique. Vitae sit lorem tellus et quis Phasellus lacus tincidunt nunc Fusce. Pharetra wisi Suspendisse mus sagittis libero lacinia Integer consequat ac Phasellus. Et urna ac cursus tortor aliquam Aliquam amet tellus volutpat Vestibulum. Justo interdum condimentum In augue congue tellus sollicitudin Quisque quis nibh."';
,,
if ( 1 == $_GET['test'] ) {,if ( 1 == $_GET['test'] ) {,if ( 1 == $_GET['test'] ) {
echo $test_str;,echo $test_str;,echo $test_str;
die;,die;,die;
} elseif ( 2 == $_GET['test'] ) {,} elseif ( 2 == $_GET['test'] ) {,} elseif ( 2 == $_GET['test'] ) {
if ( !isset($_SERVER['HTTP_ACCEPT_ENCODING']) ),if ( !isset($_SERVER['HTTP_ACCEPT_ENCODING']) ),if ( !isset($_SERVER['HTTP_ACCEPT_ENCODING']) )
die('-1');,die('-1');,die('-1');
if ( false !== stripos( $_SERVER['HTTP_ACCEPT_ENCODING'] 'deflate') && function_exists('gzdeflate') && ! $force_gzip ) {,if ( false !== stripos( $_SERVER['HTTP_ACCEPT_ENCODING'] 'deflate') && function_exists('gzdeflate') && ! $force_gzip ) {,if ( false !== stripos( $_SERVER['HTTP_ACCEPT_ENCODING'] 'deflate') && function_exists('gzdeflate') && ! $force_gzip ) {
header('Content-Encoding: deflate');,header('Content-Encoding: deflate');,header('Content-Encoding: deflate');
$out = gzdeflate( $test_str 1 );,$out = gzdeflate( $test_str 1 );,$out = gzdeflate( $test_str 1 );
} elseif ( false !== stripos( $_SERVER['HTTP_ACCEPT_ENCODING'] 'gzip') && function_exists('gzencode') ) {,} elseif ( false !== stripos( $_SERVER['HTTP_ACCEPT_ENCODING'] 'gzip') && function_exists('gzencode') ) {,} elseif ( false !== stripos( $_SERVER['HTTP_ACCEPT_ENCODING'] 'gzip') && function_exists('gzencode') ) {
header('Content-Encoding: gzip');,header('Content-Encoding: gzip');,header('Content-Encoding: gzip');
$out = gzencode( $test_str 1 );,$out = gzencode( $test_str 1 );,$out = gzencode( $test_str 1 );
} else {,} else {,} else {
die('-1');,die('-1');,die('-1');
},},}
echo $out;,echo $out;,echo $out;
die;,die;,die;
} elseif ( 'no' == $_GET['test'] ) {,} elseif ( 'no' == $_GET['test'] ) {,} elseif ( 'no' == $_GET['test'] ) {
update_site_option('can_compress_scripts' 0);,update_site_option('can_compress_scripts' 0);,update_site_option('can_compress_scripts' 0);
} elseif ( 'yes' == $_GET['test'] ) {,} elseif ( 'yes' == $_GET['test'] ) {,} elseif ( 'yes' == $_GET['test'] ) {
update_site_option('can_compress_scripts' 1);,update_site_option('can_compress_scripts' 1);,update_site_option('can_compress_scripts' 1);
},},}
},},}
,,
die('0');,die('0');,die('0');
break;,break;,break;
case 'imgedit-preview' :,case 'imgedit-preview' :,case 'imgedit-preview' :
$post_id = intval($_GET['postid']);,$post_id = intval($_GET['postid']);,$post_id = intval($_GET['postid']);
if ( empty($post_id) || !current_user_can('edit_post' $post_id) ),if ( empty($post_id) || !current_user_can('edit_post' $post_id) ),if ( empty($post_id) || !current_user_can('edit_post' $post_id) )
die('-1');,die('-1');,die('-1');
,,
check_ajax_referer( "image_editor-$post_id" );,check_ajax_referer( "image_editor-$post_id" );,check_ajax_referer( "image_editor-$post_id" );
,,
include_once( ABSPATH . 'wp-admin/includes/image-edit.php' );,include_once( ABSPATH . 'wp-admin/includes/image-edit.php' );,include_once( ABSPATH . 'wp-admin/includes/image-edit.php' );
if ( ! stream_preview_image($post_id) ),if ( ! stream_preview_image($post_id) ),if ( ! stream_preview_image($post_id) )
die('-1');,die('-1');,die('-1');
,,
die();,die();,die();
break;,break;,break;
case 'menu-quick-search':,case 'menu-quick-search':,case 'menu-quick-search':
if ( ! current_user_can( 'edit_theme_options' ) ),if ( ! current_user_can( 'edit_theme_options' ) ),if ( ! current_user_can( 'edit_theme_options' ) )
die('-1');,die('-1');,die('-1');
,,
require_once ABSPATH . 'wp-admin/includes/nav-menu.php';,require_once ABSPATH . 'wp-admin/includes/nav-menu.php';,require_once ABSPATH . 'wp-admin/includes/nav-menu.php';
,,
_wp_ajax_menu_quick_search( $_REQUEST );,_wp_ajax_menu_quick_search( $_REQUEST );,_wp_ajax_menu_quick_search( $_REQUEST );
,,
exit;,exit;,exit;
break;,break;,break;
case 'oembed-cache' :,case 'oembed-cache' :,case 'oembed-cache' :
$return = ( $wp_embed->cache_oembed( $_GET['post'] ) ) ? '1' : '0';,$return = ( $wp_embed->cache_oembed( $_GET['post'] ) ) ? '1' : '0';,$return = ( $wp_embed->cache_oembed( $_GET['post'] ) ) ? '1' : '0';
die( $return );,die( $return );,die( $return );
break;,break;,break;
default :,default :,default :
do_action( 'wp_ajax_' . $_GET['action'] );,do_action( 'wp_ajax_' . $_GET['action'] );,do_action( 'wp_ajax_' . $_GET['action'] );
die('0');,die('0');,die('0');
break;,break;,break;
endswitch;,endswitch;,endswitch;
endif;,endif;,endif;
,,
/**,/**,/**
* Sends back current comment total and new page links if they need to be updated.,* Sends back current comment total and new page links if they need to be updated.,* Sends back current comment total and new page links if they need to be updated.
*,*,*
* Contrary to normal success AJAX response ("1") die with time() on success.,* Contrary to normal success AJAX response ("1") die with time() on success.,* Contrary to normal success AJAX response ("1") die with time() on success.
*,*,*
* @since 2.7,* @since 2.7,* @since 2.7
*,*,*
* @param int $comment_id,* @param int $comment_id,* @param int $comment_id
* @return die,* @return die,* @return die
*/,*/,*/
function _wp_ajax_delete_comment_response( $comment_id $delta = -1 ) {,function _wp_ajax_delete_comment_response( $comment_id $delta = -1 ) {,function _wp_ajax_delete_comment_response( $comment_id $delta = -1 ) {
$total = (int) @$_POST['_total'];,$total = (int) @$_POST['_total'];,$total = (int) @$_POST['_total'];
$per_page = (int) @$_POST['_per_page'];,$per_page = (int) @$_POST['_per_page'];,$per_page = (int) @$_POST['_per_page'];
$page = (int) @$_POST['_page'];,$page = (int) @$_POST['_page'];,$page = (int) @$_POST['_page'];
$url = esc_url_raw( @$_POST['_url'] );,$url = esc_url_raw( @$_POST['_url'] );,$url = esc_url_raw( @$_POST['_url'] );
// JS didn't send us everything we need to know. Just die with success message,// JS didn't send us everything we need to know. Just die with success message,// JS didn't send us everything we need to know. Just die with success message
if ( !$total || !$per_page || !$page || !$url ),if ( !$total || !$per_page || !$page || !$url ),if ( !$total || !$per_page || !$page || !$url )
die( (string) time() );,die( (string) time() );,die( (string) time() );
,,
$total += $delta;,$total += $delta;,$total += $delta;
if ( $total < 0 ),if ( $total < 0 ),if ( $total < 0 )
$total = 0;,$total = 0;,$total = 0;
,,
// Only do the expensive stuff on a page-break and about 1 other time per page,// Only do the expensive stuff on a page-break and about 1 other time per page,// Only do the expensive stuff on a page-break and about 1 other time per page
if ( 0 == $total % $per_page || 1 == mt_rand( 1 $per_page ) ) {,if ( 0 == $total % $per_page || 1 == mt_rand( 1 $per_page ) ) {,if ( 0 == $total % $per_page || 1 == mt_rand( 1 $per_page ) ) {
$post_id = 0;,$post_id = 0;,$post_id = 0;
$status = 'total_comments'; // What type of comment count are we looking for?,$status = 'total_comments'; // What type of comment count are we looking for?,$status = 'total_comments'; // What type of comment count are we looking for?
$parsed = parse_url( $url );,$parsed = parse_url( $url );,$parsed = parse_url( $url );
if ( isset( $parsed['query'] ) ) {,if ( isset( $parsed['query'] ) ) {,if ( isset( $parsed['query'] ) ) {
parse_str( $parsed['query'] $query_vars );,parse_str( $parsed['query'] $query_vars );,parse_str( $parsed['query'] $query_vars );
if ( !empty( $query_vars['comment_status'] ) ),if ( !empty( $query_vars['comment_status'] ) ),if ( !empty( $query_vars['comment_status'] ) )
$status = $query_vars['comment_status'];,$status = $query_vars['comment_status'];,$status = $query_vars['comment_status'];
if ( !empty( $query_vars['p'] ) ),if ( !empty( $query_vars['p'] ) ),if ( !empty( $query_vars['p'] ) )
$post_id = (int) $query_vars['p'];,$post_id = (int) $query_vars['p'];,$post_id = (int) $query_vars['p'];
},},}
,,
$comment_count = wp_count_comments($post_id);,$comment_count = wp_count_comments($post_id);,$comment_count = wp_count_comments($post_id);
,,
if ( isset( $comment_count->$status ) ) // We're looking for a known type of comment count,if ( isset( $comment_count->$status ) ) // We're looking for a known type of comment count,if ( isset( $comment_count->$status ) ) // We're looking for a known type of comment count
$total = $comment_count->$status;,$total = $comment_count->$status;,$total = $comment_count->$status;
// else use the decremented value from above,// else use the decremented value from above,// else use the decremented value from above
},},}
,,
$time = time(); // The time since the last comment count,$time = time(); // The time since the last comment count,$time = time(); // The time since the last comment count
,,
$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(
'what' => 'comment','what' => 'comment','what' => 'comment'
'id' => $comment_id // here for completeness - not used,'id' => $comment_id // here for completeness - not used,'id' => $comment_id // here for completeness - not used
'supplemental' => array(,'supplemental' => array(,'supplemental' => array(
'total_items_i18n' => sprintf( _n( '1 item' '%s items' $total ) number_format_i18n( $total ) ),'total_items_i18n' => sprintf( _n( '1 item' '%s items' $total ) number_format_i18n( $total ) ),'total_items_i18n' => sprintf( _n( '1 item' '%s items' $total ) number_format_i18n( $total ) )
'total_pages' => ceil( $total / $per_page ),'total_pages' => ceil( $total / $per_page ),'total_pages' => ceil( $total / $per_page )
'total_pages_i18n' => number_format_i18n( ceil( $total / $per_page ) ),'total_pages_i18n' => number_format_i18n( ceil( $total / $per_page ) ),'total_pages_i18n' => number_format_i18n( ceil( $total / $per_page ) )
'total' => $total,'total' => $total,'total' => $total
'time' => $time,'time' => $time,'time' => $time
),),)
) );,) );,) );
$x->send();,$x->send();,$x->send();
},},}
,,
function _wp_ajax_add_hierarchical_term() {,function _wp_ajax_add_hierarchical_term() {,function _wp_ajax_add_hierarchical_term() {
$action = $_POST['action'];,$action = $_POST['action'];,$action = $_POST['action'];
$taxonomy = get_taxonomy(substr($action 4));,$taxonomy = get_taxonomy(substr($action 4));,$taxonomy = get_taxonomy(substr($action 4));
check_ajax_referer( $action '_ajax_nonce-add-' . $taxonomy->name );,check_ajax_referer( $action '_ajax_nonce-add-' . $taxonomy->name );,check_ajax_referer( $action '_ajax_nonce-add-' . $taxonomy->name );
if ( !current_user_can( $taxonomy->cap->edit_terms ) ),if ( !current_user_can( $taxonomy->cap->edit_terms ) ),if ( !current_user_can( $taxonomy->cap->edit_terms ) )
die('-1');,die('-1');,die('-1');
$names = explode('' $_POST['new'.$taxonomy->name]);,$names = explode('' $_POST['new'.$taxonomy->name]);,$names = explode('' $_POST['new'.$taxonomy->name]);
$parent = isset($_POST['new'.$taxonomy->name.'_parent']) ? (int) $_POST['new'.$taxonomy->name.'_parent'] : 0;,$parent = isset($_POST['new'.$taxonomy->name.'_parent']) ? (int) $_POST['new'.$taxonomy->name.'_parent'] : 0;,$parent = isset($_POST['new'.$taxonomy->name.'_parent']) ? (int) $_POST['new'.$taxonomy->name.'_parent'] : 0;
if ( 0 > $parent ),if ( 0 > $parent ),if ( 0 > $parent )
$parent = 0;,$parent = 0;,$parent = 0;
if ( $taxonomy->name == 'category' ),if ( $taxonomy->name == 'category' ),if ( $taxonomy->name == 'category' )
$post_category = isset($_POST['post_category']) ? (array) $_POST['post_category'] : array();,$post_category = isset($_POST['post_category']) ? (array) $_POST['post_category'] : array();,$post_category = isset($_POST['post_category']) ? (array) $_POST['post_category'] : array();
else,else,else
$post_category = ( isset($_POST['tax_input']) && isset($_POST['tax_input'][$taxonomy->name]) ) ? (array) $_POST['tax_input'][$taxonomy->name] : array();,$post_category = ( isset($_POST['tax_input']) && isset($_POST['tax_input'][$taxonomy->name]) ) ? (array) $_POST['tax_input'][$taxonomy->name] : array();,$post_category = ( isset($_POST['tax_input']) && isset($_POST['tax_input'][$taxonomy->name]) ) ? (array) $_POST['tax_input'][$taxonomy->name] : array();
$checked_categories = array_map( 'absint' (array) $post_category );,$checked_categories = array_map( 'absint' (array) $post_category );,$checked_categories = array_map( 'absint' (array) $post_category );
$popular_ids = wp_popular_terms_checklist($taxonomy->name 0 10 false);,$popular_ids = wp_popular_terms_checklist($taxonomy->name 0 10 false);,$popular_ids = wp_popular_terms_checklist($taxonomy->name 0 10 false);
,,
foreach ( $names as $cat_name ) {,foreach ( $names as $cat_name ) {,foreach ( $names as $cat_name ) {
$cat_name = trim($cat_name);,$cat_name = trim($cat_name);,$cat_name = trim($cat_name);
$category_nicename = sanitize_title($cat_name);,$category_nicename = sanitize_title($cat_name);,$category_nicename = sanitize_title($cat_name);
if ( '' === $category_nicename ),if ( '' === $category_nicename ),if ( '' === $category_nicename )
continue;,continue;,continue;
if ( !($cat_id = term_exists($cat_name $taxonomy->name $parent)) ) {,if ( !($cat_id = term_exists($cat_name $taxonomy->name $parent)) ) {,if ( !($cat_id = term_exists($cat_name $taxonomy->name $parent)) ) {
$new_term = wp_insert_term($cat_name $taxonomy->name array('parent' => $parent));,$new_term = wp_insert_term($cat_name $taxonomy->name array('parent' => $parent));,$new_term = wp_insert_term($cat_name $taxonomy->name array('parent' => $parent));
$cat_id = $new_term['term_id'];,$cat_id = $new_term['term_id'];,$cat_id = $new_term['term_id'];
},},}
$checked_categories[] = $cat_id;,$checked_categories[] = $cat_id;,$checked_categories[] = $cat_id;
if ( $parent ) // Do these all at once in a second,if ( $parent ) // Do these all at once in a second,if ( $parent ) // Do these all at once in a second
continue;,continue;,continue;
$category = get_term( $cat_id $taxonomy->name );,$category = get_term( $cat_id $taxonomy->name );,$category = get_term( $cat_id $taxonomy->name );
ob_start();,ob_start();,ob_start();
wp_terms_checklist( 0 array( 'taxonomy' => $taxonomy->name 'descendants_and_self' => $cat_id 'selected_cats' => $checked_categories 'popular_cats' => $popular_ids ));,wp_terms_checklist( 0 array( 'taxonomy' => $taxonomy->name 'descendants_and_self' => $cat_id 'selected_cats' => $checked_categories 'popular_cats' => $popular_ids ));,wp_terms_checklist( 0 array( 'taxonomy' => $taxonomy->name 'descendants_and_self' => $cat_id 'selected_cats' => $checked_categories 'popular_cats' => $popular_ids ));
$data = ob_get_contents();,$data = ob_get_contents();,$data = ob_get_contents();
ob_end_clean();,ob_end_clean();,ob_end_clean();
$add = array(,$add = array(,$add = array(
'what' => $taxonomy->name,'what' => $taxonomy->name,'what' => $taxonomy->name
'id' => $cat_id,'id' => $cat_id,'id' => $cat_id
'data' => str_replace( array("\n" "\t") '' $data),'data' => str_replace( array("\n" "\t") '' $data),'data' => str_replace( array("\n" "\t") '' $data)
'position' => -1,'position' => -1,'position' => -1
);,);,);
},},}
,,
if ( $parent ) { // Foncy - replace the parent and all its children,if ( $parent ) { // Foncy - replace the parent and all its children,if ( $parent ) { // Foncy - replace the parent and all its children
$parent = get_term( $parent $taxonomy->name );,$parent = get_term( $parent $taxonomy->name );,$parent = get_term( $parent $taxonomy->name );
$term_id = $parent->term_id;,$term_id = $parent->term_id;,$term_id = $parent->term_id;
,,
while ( $parent->parent ) { // get the top parent,while ( $parent->parent ) { // get the top parent,while ( $parent->parent ) { // get the top parent
$parent = &get_term( $parent->parent $taxonomy->name );,$parent = &get_term( $parent->parent $taxonomy->name );,$parent = &get_term( $parent->parent $taxonomy->name );
if ( is_wp_error( $parent ) ),if ( is_wp_error( $parent ) ),if ( is_wp_error( $parent ) )
break;,break;,break;
$term_id = $parent->term_id;,$term_id = $parent->term_id;,$term_id = $parent->term_id;
},},}
,,
ob_start();,ob_start();,ob_start();
wp_terms_checklist( 0 array('taxonomy' => $taxonomy->name 'descendants_and_self' => $term_id 'selected_cats' => $checked_categories 'popular_cats' => $popular_ids));,wp_terms_checklist( 0 array('taxonomy' => $taxonomy->name 'descendants_and_self' => $term_id 'selected_cats' => $checked_categories 'popular_cats' => $popular_ids));,wp_terms_checklist( 0 array('taxonomy' => $taxonomy->name 'descendants_and_self' => $term_id 'selected_cats' => $checked_categories 'popular_cats' => $popular_ids));
$data = ob_get_contents();,$data = ob_get_contents();,$data = ob_get_contents();
ob_end_clean();,ob_end_clean();,ob_end_clean();
$add = array(,$add = array(,$add = array(
'what' => $taxonomy->name,'what' => $taxonomy->name,'what' => $taxonomy->name
'id' => $term_id,'id' => $term_id,'id' => $term_id
'data' => str_replace( array("\n" "\t") '' $data),'data' => str_replace( array("\n" "\t") '' $data),'data' => str_replace( array("\n" "\t") '' $data)
'position' => -1,'position' => -1,'position' => -1
);,);,);
},},}
,,
ob_start();,ob_start();,ob_start();
wp_dropdown_categories( array(,wp_dropdown_categories( array(,wp_dropdown_categories( array(
'taxonomy' => $taxonomy->name 'hide_empty' => 0 'name' => 'new'.$taxonomy->name.'_parent' 'orderby' => 'name','taxonomy' => $taxonomy->name 'hide_empty' => 0 'name' => 'new'.$taxonomy->name.'_parent' 'orderby' => 'name','taxonomy' => $taxonomy->name 'hide_empty' => 0 'name' => 'new'.$taxonomy->name.'_parent' 'orderby' => 'name'
'hierarchical' => 1 'show_option_none' => 'тАФ '.$taxonomy->labels->parent_item.' тАФ','hierarchical' => 1 'show_option_none' => 'тАФ '.$taxonomy->labels->parent_item.' тАФ','hierarchical' => 1 'show_option_none' => 'тАФ '.$taxonomy->labels->parent_item.' тАФ'
) );,) );,) );
$sup = ob_get_contents();,$sup = ob_get_contents();,$sup = ob_get_contents();
ob_end_clean();,ob_end_clean();,ob_end_clean();
$add['supplemental'] = array( 'newcat_parent' => $sup );,$add['supplemental'] = array( 'newcat_parent' => $sup );,$add['supplemental'] = array( 'newcat_parent' => $sup );
,,
$x = new WP_Ajax_Response( $add );,$x = new WP_Ajax_Response( $add );,$x = new WP_Ajax_Response( $add );
$x->send();,$x->send();,$x->send();
},},}
,,
$id = isset($_POST['id'])? (int) $_POST['id'] : 0;,$id = isset($_POST['id'])? (int) $_POST['id'] : 0;,$id = isset($_POST['id'])? (int) $_POST['id'] : 0;
switch ( $action = $_POST['action'] ) :,switch ( $action = $_POST['action'] ) :,switch ( $action = $_POST['action'] ) :
case 'delete-comment' : // On success die with time() instead of 1,case 'delete-comment' : // On success die with time() instead of 1,case 'delete-comment' : // On success die with time() instead of 1
if ( !$comment = get_comment( $id ) ),if ( !$comment = get_comment( $id ) ),if ( !$comment = get_comment( $id ) )
die( (string) time() );,die( (string) time() );,die( (string) time() );
if ( ! current_user_can( 'edit_comment' $comment->comment_ID ) ),if ( ! current_user_can( 'edit_comment' $comment->comment_ID ) ),if ( ! current_user_can( 'edit_comment' $comment->comment_ID ) )
die('-1');,die('-1');,die('-1');
,,
check_ajax_referer( "delete-comment_$id" );,check_ajax_referer( "delete-comment_$id" );,check_ajax_referer( "delete-comment_$id" );
$status = wp_get_comment_status( $comment->comment_ID );,$status = wp_get_comment_status( $comment->comment_ID );,$status = wp_get_comment_status( $comment->comment_ID );
,,
$delta = -1;,$delta = -1;,$delta = -1;
if ( isset($_POST['trash']) && 1 == $_POST['trash'] ) {,if ( isset($_POST['trash']) && 1 == $_POST['trash'] ) {,if ( isset($_POST['trash']) && 1 == $_POST['trash'] ) {
if ( 'trash' == $status ),if ( 'trash' == $status ),if ( 'trash' == $status )
die( (string) time() );,die( (string) time() );,die( (string) time() );
$r = wp_trash_comment( $comment->comment_ID );,$r = wp_trash_comment( $comment->comment_ID );,$r = wp_trash_comment( $comment->comment_ID );
} elseif ( isset($_POST['untrash']) && 1 == $_POST['untrash'] ) {,} elseif ( isset($_POST['untrash']) && 1 == $_POST['untrash'] ) {,} elseif ( isset($_POST['untrash']) && 1 == $_POST['untrash'] ) {
if ( 'trash' != $status ),if ( 'trash' != $status ),if ( 'trash' != $status )
die( (string) time() );,die( (string) time() );,die( (string) time() );
$r = wp_untrash_comment( $comment->comment_ID );,$r = wp_untrash_comment( $comment->comment_ID );,$r = wp_untrash_comment( $comment->comment_ID );
if ( ! isset( $_POST['comment_status'] ) || $_POST['comment_status'] != 'trash' ) // undo trash not in trash,if ( ! isset( $_POST['comment_status'] ) || $_POST['comment_status'] != 'trash' ) // undo trash not in trash,if ( ! isset( $_POST['comment_status'] ) || $_POST['comment_status'] != 'trash' ) // undo trash not in trash
$delta = 1;,$delta = 1;,$delta = 1;
} elseif ( isset($_POST['spam']) && 1 == $_POST['spam'] ) {,} elseif ( isset($_POST['spam']) && 1 == $_POST['spam'] ) {,} elseif ( isset($_POST['spam']) && 1 == $_POST['spam'] ) {
if ( 'spam' == $status ),if ( 'spam' == $status ),if ( 'spam' == $status )
die( (string) time() );,die( (string) time() );,die( (string) time() );
$r = wp_spam_comment( $comment->comment_ID );,$r = wp_spam_comment( $comment->comment_ID );,$r = wp_spam_comment( $comment->comment_ID );
} elseif ( isset($_POST['unspam']) && 1 == $_POST['unspam'] ) {,} elseif ( isset($_POST['unspam']) && 1 == $_POST['unspam'] ) {,} elseif ( isset($_POST['unspam']) && 1 == $_POST['unspam'] ) {
if ( 'spam' != $status ),if ( 'spam' != $status ),if ( 'spam' != $status )
die( (string) time() );,die( (string) time() );,die( (string) time() );
$r = wp_unspam_comment( $comment->comment_ID );,$r = wp_unspam_comment( $comment->comment_ID );,$r = wp_unspam_comment( $comment->comment_ID );
if ( ! isset( $_POST['comment_status'] ) || $_POST['comment_status'] != 'spam' ) // undo spam not in spam,if ( ! isset( $_POST['comment_status'] ) || $_POST['comment_status'] != 'spam' ) // undo spam not in spam,if ( ! isset( $_POST['comment_status'] ) || $_POST['comment_status'] != 'spam' ) // undo spam not in spam
$delta = 1;,$delta = 1;,$delta = 1;
} elseif ( isset($_POST['delete']) && 1 == $_POST['delete'] ) {,} elseif ( isset($_POST['delete']) && 1 == $_POST['delete'] ) {,} elseif ( isset($_POST['delete']) && 1 == $_POST['delete'] ) {
$r = wp_delete_comment( $comment->comment_ID );,$r = wp_delete_comment( $comment->comment_ID );,$r = wp_delete_comment( $comment->comment_ID );
} else {,} else {,} else {
die('-1');,die('-1');,die('-1');
},},}
,,
if ( $r ) // Decide if we need to send back '1' or a more complicated response including page links and comment counts,if ( $r ) // Decide if we need to send back '1' or a more complicated response including page links and comment counts,if ( $r ) // Decide if we need to send back '1' or a more complicated response including page links and comment counts
_wp_ajax_delete_comment_response( $comment->comment_ID $delta );,_wp_ajax_delete_comment_response( $comment->comment_ID $delta );,_wp_ajax_delete_comment_response( $comment->comment_ID $delta );
die( '0' );,die( '0' );,die( '0' );
break;,break;,break;
case 'delete-tag' :,case 'delete-tag' :,case 'delete-tag' :
$tag_id = (int) $_POST['tag_ID'];,$tag_id = (int) $_POST['tag_ID'];,$tag_id = (int) $_POST['tag_ID'];
check_ajax_referer( "delete-tag_$tag_id" );,check_ajax_referer( "delete-tag_$tag_id" );,check_ajax_referer( "delete-tag_$tag_id" );
,,
$taxonomy = !empty($_POST['taxonomy']) ? $_POST['taxonomy'] : 'post_tag';,$taxonomy = !empty($_POST['taxonomy']) ? $_POST['taxonomy'] : 'post_tag';,$taxonomy = !empty($_POST['taxonomy']) ? $_POST['taxonomy'] : 'post_tag';
$tax = get_taxonomy($taxonomy);,$tax = get_taxonomy($taxonomy);,$tax = get_taxonomy($taxonomy);
,,
if ( !current_user_can( $tax->cap->delete_terms ) ),if ( !current_user_can( $tax->cap->delete_terms ) ),if ( !current_user_can( $tax->cap->delete_terms ) )
die('-1');,die('-1');,die('-1');
,,
$tag = get_term( $tag_id $taxonomy );,$tag = get_term( $tag_id $taxonomy );,$tag = get_term( $tag_id $taxonomy );
if ( !$tag || is_wp_error( $tag ) ),if ( !$tag || is_wp_error( $tag ) ),if ( !$tag || is_wp_error( $tag ) )
die('1');,die('1');,die('1');
,,
if ( wp_delete_term($tag_id $taxonomy)),if ( wp_delete_term($tag_id $taxonomy)),if ( wp_delete_term($tag_id $taxonomy))
die('1');,die('1');,die('1');
else,else,else
die('0');,die('0');,die('0');
break;,break;,break;
case 'delete-link' :,case 'delete-link' :,case 'delete-link' :
check_ajax_referer( "delete-bookmark_$id" );,check_ajax_referer( "delete-bookmark_$id" );,check_ajax_referer( "delete-bookmark_$id" );
if ( !current_user_can( 'manage_links' ) ),if ( !current_user_can( 'manage_links' ) ),if ( !current_user_can( 'manage_links' ) )
die('-1');,die('-1');,die('-1');
,,
$link = get_bookmark( $id );,$link = get_bookmark( $id );,$link = get_bookmark( $id );
if ( !$link || is_wp_error( $link ) ),if ( !$link || is_wp_error( $link ) ),if ( !$link || is_wp_error( $link ) )
die('1');,die('1');,die('1');
,,
if ( wp_delete_link( $id ) ),if ( wp_delete_link( $id ) ),if ( wp_delete_link( $id ) )
die('1');,die('1');,die('1');
else,else,else
die('0');,die('0');,die('0');
break;,break;,break;
case 'delete-meta' :,case 'delete-meta' :,case 'delete-meta' :
check_ajax_referer( "delete-meta_$id" );,check_ajax_referer( "delete-meta_$id" );,check_ajax_referer( "delete-meta_$id" );
if ( !$meta = get_metadata_by_mid( 'post' $id ) ),if ( !$meta = get_metadata_by_mid( 'post' $id ) ),if ( !$meta = get_metadata_by_mid( 'post' $id ) )
die('1');,die('1');,die('1');
,,
if ( is_protected_meta( $meta->meta_key 'post' ) || ! current_user_can( 'delete_post_meta' $meta->post_id $meta->meta_key ) ),if ( is_protected_meta( $meta->meta_key 'post' ) || ! current_user_can( 'delete_post_meta' $meta->post_id $meta->meta_key ) ),if ( is_protected_meta( $meta->meta_key 'post' ) || ! current_user_can( 'delete_post_meta' $meta->post_id $meta->meta_key ) )
die('-1');,die('-1');,die('-1');
if ( delete_meta( $meta->meta_id ) ),if ( delete_meta( $meta->meta_id ) ),if ( delete_meta( $meta->meta_id ) )
die('1');,die('1');,die('1');
die('0');,die('0');,die('0');
break;,break;,break;
case 'delete-post' :,case 'delete-post' :,case 'delete-post' :
check_ajax_referer( "{$action}_$id" );,check_ajax_referer( "{$action}_$id" );,check_ajax_referer( "{$action}_$id" );
if ( !current_user_can( 'delete_post' $id ) ),if ( !current_user_can( 'delete_post' $id ) ),if ( !current_user_can( 'delete_post' $id ) )
die('-1');,die('-1');,die('-1');
,,
if ( !get_post( $id ) ),if ( !get_post( $id ) ),if ( !get_post( $id ) )
die('1');,die('1');,die('1');
,,
if ( wp_delete_post( $id ) ),if ( wp_delete_post( $id ) ),if ( wp_delete_post( $id ) )
die('1');,die('1');,die('1');
else,else,else
die('0');,die('0');,die('0');
break;,break;,break;
case 'trash-post' :,case 'trash-post' :,case 'trash-post' :
case 'untrash-post' :,case 'untrash-post' :,case 'untrash-post' :
check_ajax_referer( "{$action}_$id" );,check_ajax_referer( "{$action}_$id" );,check_ajax_referer( "{$action}_$id" );
if ( !current_user_can( 'delete_post' $id ) ),if ( !current_user_can( 'delete_post' $id ) ),if ( !current_user_can( 'delete_post' $id ) )
die('-1');,die('-1');,die('-1');
,,
if ( !get_post( $id ) ),if ( !get_post( $id ) ),if ( !get_post( $id ) )
die('1');,die('1');,die('1');
,,
if ( 'trash-post' == $action ),if ( 'trash-post' == $action ),if ( 'trash-post' == $action )
$done = wp_trash_post( $id );,$done = wp_trash_post( $id );,$done = wp_trash_post( $id );
else,else,else
$done = wp_untrash_post( $id );,$done = wp_untrash_post( $id );,$done = wp_untrash_post( $id );
,,
if ( $done ),if ( $done ),if ( $done )
die('1');,die('1');,die('1');
,,
die('0');,die('0');,die('0');
break;,break;,break;
case 'delete-page' :,case 'delete-page' :,case 'delete-page' :
check_ajax_referer( "{$action}_$id" );,check_ajax_referer( "{$action}_$id" );,check_ajax_referer( "{$action}_$id" );
if ( !current_user_can( 'delete_page' $id ) ),if ( !current_user_can( 'delete_page' $id ) ),if ( !current_user_can( 'delete_page' $id ) )
die('-1');,die('-1');,die('-1');
,,
if ( !get_page( $id ) ),if ( !get_page( $id ) ),if ( !get_page( $id ) )
die('1');,die('1');,die('1');
,,
if ( wp_delete_post( $id ) ),if ( wp_delete_post( $id ) ),if ( wp_delete_post( $id ) )
die('1');,die('1');,die('1');
else,else,else
die('0');,die('0');,die('0');
break;,break;,break;
case 'dim-comment' : // On success die with time() instead of 1,case 'dim-comment' : // On success die with time() instead of 1,case 'dim-comment' : // On success die with time() instead of 1
,,
if ( !$comment = get_comment( $id ) ) {,if ( !$comment = get_comment( $id ) ) {,if ( !$comment = get_comment( $id ) ) {
$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(
'what' => 'comment','what' => 'comment','what' => 'comment'
'id' => new WP_Error('invalid_comment' sprintf(__('Comment %d does not exist') $id)),'id' => new WP_Error('invalid_comment' sprintf(__('Comment %d does not exist') $id)),'id' => new WP_Error('invalid_comment' sprintf(__('Comment %d does not exist') $id))
) );,) );,) );
$x->send();,$x->send();,$x->send();
},},}
,,
if ( ! current_user_can( 'edit_comment' $comment->comment_ID ) && ! current_user_can( 'moderate_comments' ) ),if ( ! current_user_can( 'edit_comment' $comment->comment_ID ) && ! current_user_can( 'moderate_comments' ) ),if ( ! current_user_can( 'edit_comment' $comment->comment_ID ) && ! current_user_can( 'moderate_comments' ) )
die('-1');,die('-1');,die('-1');
,,
$current = wp_get_comment_status( $comment->comment_ID );,$current = wp_get_comment_status( $comment->comment_ID );,$current = wp_get_comment_status( $comment->comment_ID );
if ( $_POST['new'] == $current ),if ( $_POST['new'] == $current ),if ( $_POST['new'] == $current )
die( (string) time() );,die( (string) time() );,die( (string) time() );
,,
check_ajax_referer( "approve-comment_$id" );,check_ajax_referer( "approve-comment_$id" );,check_ajax_referer( "approve-comment_$id" );
if ( in_array( $current array( 'unapproved' 'spam' ) ) ),if ( in_array( $current array( 'unapproved' 'spam' ) ) ),if ( in_array( $current array( 'unapproved' 'spam' ) ) )
$result = wp_set_comment_status( $comment->comment_ID 'approve' true );,$result = wp_set_comment_status( $comment->comment_ID 'approve' true );,$result = wp_set_comment_status( $comment->comment_ID 'approve' true );
else,else,else
$result = wp_set_comment_status( $comment->comment_ID 'hold' true );,$result = wp_set_comment_status( $comment->comment_ID 'hold' true );,$result = wp_set_comment_status( $comment->comment_ID 'hold' true );
,,
if ( is_wp_error($result) ) {,if ( is_wp_error($result) ) {,if ( is_wp_error($result) ) {
$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(
'what' => 'comment','what' => 'comment','what' => 'comment'
'id' => $result,'id' => $result,'id' => $result
) );,) );,) );
$x->send();,$x->send();,$x->send();
},},}
,,
// Decide if we need to send back '1' or a more complicated response including page links and comment counts,// Decide if we need to send back '1' or a more complicated response including page links and comment counts,// Decide if we need to send back '1' or a more complicated response including page links and comment counts
_wp_ajax_delete_comment_response( $comment->comment_ID );,_wp_ajax_delete_comment_response( $comment->comment_ID );,_wp_ajax_delete_comment_response( $comment->comment_ID );
die( '0' );,die( '0' );,die( '0' );
break;,break;,break;
case 'add-link-category' : // On the Fly,case 'add-link-category' : // On the Fly,case 'add-link-category' : // On the Fly
check_ajax_referer( $action );,check_ajax_referer( $action );,check_ajax_referer( $action );
if ( !current_user_can( 'manage_categories' ) ),if ( !current_user_can( 'manage_categories' ) ),if ( !current_user_can( 'manage_categories' ) )
die('-1');,die('-1');,die('-1');
$names = explode('' $_POST['newcat']);,$names = explode('' $_POST['newcat']);,$names = explode('' $_POST['newcat']);
$x = new WP_Ajax_Response();,$x = new WP_Ajax_Response();,$x = new WP_Ajax_Response();
foreach ( $names as $cat_name ) {,foreach ( $names as $cat_name ) {,foreach ( $names as $cat_name ) {
$cat_name = trim($cat_name);,$cat_name = trim($cat_name);,$cat_name = trim($cat_name);
$slug = sanitize_title($cat_name);,$slug = sanitize_title($cat_name);,$slug = sanitize_title($cat_name);
if ( '' === $slug ),if ( '' === $slug ),if ( '' === $slug )
continue;,continue;,continue;
if ( !$cat_id = term_exists( $cat_name 'link_category' ) ) {,if ( !$cat_id = term_exists( $cat_name 'link_category' ) ) {,if ( !$cat_id = term_exists( $cat_name 'link_category' ) ) {
$cat_id = wp_insert_term( $cat_name 'link_category' );,$cat_id = wp_insert_term( $cat_name 'link_category' );,$cat_id = wp_insert_term( $cat_name 'link_category' );
},},}
$cat_id = $cat_id['term_id'];,$cat_id = $cat_id['term_id'];,$cat_id = $cat_id['term_id'];
$cat_name = esc_html(stripslashes($cat_name));,$cat_name = esc_html(stripslashes($cat_name));,$cat_name = esc_html(stripslashes($cat_name));
$x->add( array(,$x->add( array(,$x->add( array(
'what' => 'link-category','what' => 'link-category','what' => 'link-category'
'id' => $cat_id,'id' => $cat_id,'id' => $cat_id
'data' => " $cat_name",'data' => " $cat_name",'data' => " $cat_name"
'position' => -1,'position' => -1,'position' => -1
) );,) );,) );
},},}
$x->send();,$x->send();,$x->send();
break;,break;,break;
case 'add-tag' :,case 'add-tag' :,case 'add-tag' :
check_ajax_referer( 'add-tag' '_wpnonce_add-tag' );,check_ajax_referer( 'add-tag' '_wpnonce_add-tag' );,check_ajax_referer( 'add-tag' '_wpnonce_add-tag' );
$post_type = !empty($_POST['post_type']) ? $_POST['post_type'] : 'post';,$post_type = !empty($_POST['post_type']) ? $_POST['post_type'] : 'post';,$post_type = !empty($_POST['post_type']) ? $_POST['post_type'] : 'post';
$taxonomy = !empty($_POST['taxonomy']) ? $_POST['taxonomy'] : 'post_tag';,$taxonomy = !empty($_POST['taxonomy']) ? $_POST['taxonomy'] : 'post_tag';,$taxonomy = !empty($_POST['taxonomy']) ? $_POST['taxonomy'] : 'post_tag';
$tax = get_taxonomy($taxonomy);,$tax = get_taxonomy($taxonomy);,$tax = get_taxonomy($taxonomy);
,,
if ( !current_user_can( $tax->cap->edit_terms ) ),if ( !current_user_can( $tax->cap->edit_terms ) ),if ( !current_user_can( $tax->cap->edit_terms ) )
die('-1');,die('-1');,die('-1');
,,
$x = new WP_Ajax_Response();,$x = new WP_Ajax_Response();,$x = new WP_Ajax_Response();
,,
$tag = wp_insert_term($_POST['tag-name'] $taxonomy $_POST );,$tag = wp_insert_term($_POST['tag-name'] $taxonomy $_POST );,$tag = wp_insert_term($_POST['tag-name'] $taxonomy $_POST );
,,
if ( !$tag || is_wp_error($tag) || (!$tag = get_term( $tag['term_id'] $taxonomy )) ) {,if ( !$tag || is_wp_error($tag) || (!$tag = get_term( $tag['term_id'] $taxonomy )) ) {,if ( !$tag || is_wp_error($tag) || (!$tag = get_term( $tag['term_id'] $taxonomy )) ) {
$message = __('An error has occurred. Please reload the page and try again.');,$message = __('An error has occurred. Please reload the page and try again.');,$message = __('An error has occurred. Please reload the page and try again.');
if ( is_wp_error($tag) && $tag->get_error_message() ),if ( is_wp_error($tag) && $tag->get_error_message() ),if ( is_wp_error($tag) && $tag->get_error_message() )
$message = $tag->get_error_message();,$message = $tag->get_error_message();,$message = $tag->get_error_message();
,,
$x->add( array(,$x->add( array(,$x->add( array(
'what' => 'taxonomy','what' => 'taxonomy','what' => 'taxonomy'
'data' => new WP_Error('error' $message ),'data' => new WP_Error('error' $message ),'data' => new WP_Error('error' $message )
) );,) );,) );
$x->send();,$x->send();,$x->send();
},},}
,,
set_current_screen( $_POST['screen'] );,set_current_screen( $_POST['screen'] );,set_current_screen( $_POST['screen'] );
,,
$wp_list_table = _get_list_table('WP_Terms_List_Table');,$wp_list_table = _get_list_table('WP_Terms_List_Table');,$wp_list_table = _get_list_table('WP_Terms_List_Table');
,,
$level = 0;,$level = 0;,$level = 0;
if ( is_taxonomy_hierarchical($taxonomy) ) {,if ( is_taxonomy_hierarchical($taxonomy) ) {,if ( is_taxonomy_hierarchical($taxonomy) ) {
$level = count( get_ancestors( $tag->term_id $taxonomy ) );,$level = count( get_ancestors( $tag->term_id $taxonomy ) );,$level = count( get_ancestors( $tag->term_id $taxonomy ) );
ob_start();,ob_start();,ob_start();
$wp_list_table->single_row( $tag $level );,$wp_list_table->single_row( $tag $level );,$wp_list_table->single_row( $tag $level );
$noparents = ob_get_clean();,$noparents = ob_get_clean();,$noparents = ob_get_clean();
},},}
,,
ob_start();,ob_start();,ob_start();
$wp_list_table->single_row( $tag );,$wp_list_table->single_row( $tag );,$wp_list_table->single_row( $tag );
$parents = ob_get_clean();,$parents = ob_get_clean();,$parents = ob_get_clean();
,,
$x->add( array(,$x->add( array(,$x->add( array(
'what' => 'taxonomy','what' => 'taxonomy','what' => 'taxonomy'
'supplemental' => compact('parents' 'noparents'),'supplemental' => compact('parents' 'noparents'),'supplemental' => compact('parents' 'noparents')
) );,) );,) );
$x->add( array(,$x->add( array(,$x->add( array(
'what' => 'term','what' => 'term','what' => 'term'
'position' => $level,'position' => $level,'position' => $level
'supplemental' => (array) $tag,'supplemental' => (array) $tag,'supplemental' => (array) $tag
) );,) );,) );
$x->send();,$x->send();,$x->send();
break;,break;,break;
case 'get-tagcloud' :,case 'get-tagcloud' :,case 'get-tagcloud' :
if ( isset( $_POST['tax'] ) ) {,if ( isset( $_POST['tax'] ) ) {,if ( isset( $_POST['tax'] ) ) {
$taxonomy = sanitize_key( $_POST['tax'] );,$taxonomy = sanitize_key( $_POST['tax'] );,$taxonomy = sanitize_key( $_POST['tax'] );
$tax = get_taxonomy( $taxonomy );,$tax = get_taxonomy( $taxonomy );,$tax = get_taxonomy( $taxonomy );
if ( ! $tax ),if ( ! $tax ),if ( ! $tax )
die( '0' );,die( '0' );,die( '0' );
if ( ! current_user_can( $tax->cap->assign_terms ) ),if ( ! current_user_can( $tax->cap->assign_terms ) ),if ( ! current_user_can( $tax->cap->assign_terms ) )
die( '-1' );,die( '-1' );,die( '-1' );
} else {,} else {,} else {
die('0');,die('0');,die('0');
},},}
,,
$tags = get_terms( $taxonomy array( 'number' => 45 'orderby' => 'count' 'order' => 'DESC' ) );,$tags = get_terms( $taxonomy array( 'number' => 45 'orderby' => 'count' 'order' => 'DESC' ) );,$tags = get_terms( $taxonomy array( 'number' => 45 'orderby' => 'count' 'order' => 'DESC' ) );
,,
if ( empty( $tags ) ),if ( empty( $tags ) ),if ( empty( $tags ) )
die( isset( $tax->no_tagcloud ) ? $tax->no_tagcloud : __('No tags found!') );,die( isset( $tax->no_tagcloud ) ? $tax->no_tagcloud : __('No tags found!') );,die( isset( $tax->no_tagcloud ) ? $tax->no_tagcloud : __('No tags found!') );
,,
if ( is_wp_error( $tags ) ),if ( is_wp_error( $tags ) ),if ( is_wp_error( $tags ) )
die( $tags->get_error_message() );,die( $tags->get_error_message() );,die( $tags->get_error_message() );
,,
foreach ( $tags as $key => $tag ) {,foreach ( $tags as $key => $tag ) {,foreach ( $tags as $key => $tag ) {
$tags[ $key ]->link = '#';,$tags[ $key ]->link = '#';,$tags[ $key ]->link = '#';
$tags[ $key ]->id = $tag->term_id;,$tags[ $key ]->id = $tag->term_id;,$tags[ $key ]->id = $tag->term_id;
},},}
,,
// We need raw tag names here so don't filter the output,// We need raw tag names here so don't filter the output,// We need raw tag names here so don't filter the output
$return = wp_generate_tag_cloud( $tags array('filter' => 0) );,$return = wp_generate_tag_cloud( $tags array('filter' => 0) );,$return = wp_generate_tag_cloud( $tags array('filter' => 0) );
,,
if ( empty($return) ),if ( empty($return) ),if ( empty($return) )
die('0');,die('0');,die('0');
,,
echo $return;,echo $return;,echo $return;
,,
exit;,exit;,exit;
break;,break;,break;
case 'get-comments' :,case 'get-comments' :,case 'get-comments' :
check_ajax_referer( $action );,check_ajax_referer( $action );,check_ajax_referer( $action );
,,
set_current_screen( 'edit-comments' );,set_current_screen( 'edit-comments' );,set_current_screen( 'edit-comments' );
,,
$wp_list_table = _get_list_table('WP_Post_Comments_List_Table');,$wp_list_table = _get_list_table('WP_Post_Comments_List_Table');,$wp_list_table = _get_list_table('WP_Post_Comments_List_Table');
,,
if ( !current_user_can( 'edit_post' $post_id ) ),if ( !current_user_can( 'edit_post' $post_id ) ),if ( !current_user_can( 'edit_post' $post_id ) )
die('-1');,die('-1');,die('-1');
,,
$wp_list_table->prepare_items();,$wp_list_table->prepare_items();,$wp_list_table->prepare_items();
,,
if ( !$wp_list_table->has_items() ),if ( !$wp_list_table->has_items() ),if ( !$wp_list_table->has_items() )
die('1');,die('1');,die('1');
,,
$x = new WP_Ajax_Response();,$x = new WP_Ajax_Response();,$x = new WP_Ajax_Response();
ob_start();,ob_start();,ob_start();
foreach ( $wp_list_table->items as $comment ) {,foreach ( $wp_list_table->items as $comment ) {,foreach ( $wp_list_table->items as $comment ) {
if ( ! current_user_can( 'edit_comment' $comment->comment_ID ) ),if ( ! current_user_can( 'edit_comment' $comment->comment_ID ) ),if ( ! current_user_can( 'edit_comment' $comment->comment_ID ) )
continue;,continue;,continue;
get_comment( $comment );,get_comment( $comment );,get_comment( $comment );
$wp_list_table->single_row( $comment );,$wp_list_table->single_row( $comment );,$wp_list_table->single_row( $comment );
},},}
$comment_list_item = ob_get_contents();,$comment_list_item = ob_get_contents();,$comment_list_item = ob_get_contents();
ob_end_clean();,ob_end_clean();,ob_end_clean();
,,
$x->add( array(,$x->add( array(,$x->add( array(
'what' => 'comments','what' => 'comments','what' => 'comments'
'data' => $comment_list_item,'data' => $comment_list_item,'data' => $comment_list_item
) );,) );,) );
$x->send();,$x->send();,$x->send();
break;,break;,break;
case 'replyto-comment' :,case 'replyto-comment' :,case 'replyto-comment' :
check_ajax_referer( $action '_ajax_nonce-replyto-comment' );,check_ajax_referer( $action '_ajax_nonce-replyto-comment' );,check_ajax_referer( $action '_ajax_nonce-replyto-comment' );
,,
set_current_screen( 'edit-comments' );,set_current_screen( 'edit-comments' );,set_current_screen( 'edit-comments' );
,,
$comment_post_ID = (int) $_POST['comment_post_ID'];,$comment_post_ID = (int) $_POST['comment_post_ID'];,$comment_post_ID = (int) $_POST['comment_post_ID'];
if ( !current_user_can( 'edit_post' $comment_post_ID ) ),if ( !current_user_can( 'edit_post' $comment_post_ID ) ),if ( !current_user_can( 'edit_post' $comment_post_ID ) )
die('-1');,die('-1');,die('-1');
,,
$status = $wpdb->get_var( $wpdb->prepare("SELECT post_status FROM $wpdb->posts WHERE ID = %d" $comment_post_ID) );,$status = $wpdb->get_var( $wpdb->prepare("SELECT post_status FROM $wpdb->posts WHERE ID = %d" $comment_post_ID) );,$status = $wpdb->get_var( $wpdb->prepare("SELECT post_status FROM $wpdb->posts WHERE ID = %d" $comment_post_ID) );
,,
if ( empty($status) ),if ( empty($status) ),if ( empty($status) )
die('1');,die('1');,die('1');
elseif ( in_array($status array('draft' 'pending' 'trash') ) ),elseif ( in_array($status array('draft' 'pending' 'trash') ) ),elseif ( in_array($status array('draft' 'pending' 'trash') ) )
die( __('ERROR: you are replying to a comment on a draft post.') );,die( __('ERROR: you are replying to a comment on a draft post.') );,die( __('ERROR: you are replying to a comment on a draft post.') );
,,
$user = wp_get_current_user();,$user = wp_get_current_user();,$user = wp_get_current_user();
if ( $user->ID ) {,if ( $user->ID ) {,if ( $user->ID ) {
$comment_author = $wpdb->escape($user->display_name);,$comment_author = $wpdb->escape($user->display_name);,$comment_author = $wpdb->escape($user->display_name);
$comment_author_email = $wpdb->escape($user->user_email);,$comment_author_email = $wpdb->escape($user->user_email);,$comment_author_email = $wpdb->escape($user->user_email);
$comment_author_url = $wpdb->escape($user->user_url);,$comment_author_url = $wpdb->escape($user->user_url);,$comment_author_url = $wpdb->escape($user->user_url);
$comment_content = trim($_POST['content']);,$comment_content = trim($_POST['content']);,$comment_content = trim($_POST['content']);
if ( current_user_can( 'unfiltered_html' ) ) {,if ( current_user_can( 'unfiltered_html' ) ) {,if ( current_user_can( 'unfiltered_html' ) ) {
if ( wp_create_nonce( 'unfiltered-html-comment' ) != $_POST['_wp_unfiltered_html_comment'] ) {,if ( wp_create_nonce( 'unfiltered-html-comment' ) != $_POST['_wp_unfiltered_html_comment'] ) {,if ( wp_create_nonce( 'unfiltered-html-comment' ) != $_POST['_wp_unfiltered_html_comment'] ) {
kses_remove_filters(); // start with a clean slate,kses_remove_filters(); // start with a clean slate,kses_remove_filters(); // start with a clean slate
kses_init_filters(); // set up the filters,kses_init_filters(); // set up the filters,kses_init_filters(); // set up the filters
},},}
},},}
} else {,} else {,} else {
die( __('Sorry you must be logged in to reply to a comment.') );,die( __('Sorry you must be logged in to reply to a comment.') );,die( __('Sorry you must be logged in to reply to a comment.') );
},},}
,,
if ( '' == $comment_content ),if ( '' == $comment_content ),if ( '' == $comment_content )
die( __('ERROR: please type a comment.') );,die( __('ERROR: please type a comment.') );,die( __('ERROR: please type a comment.') );
,,
$comment_parent = absint($_POST['comment_ID']);,$comment_parent = absint($_POST['comment_ID']);,$comment_parent = absint($_POST['comment_ID']);
$comment_auto_approved = false;,$comment_auto_approved = false;,$comment_auto_approved = false;
$commentdata = compact('comment_post_ID' 'comment_author' 'comment_author_email' 'comment_author_url' 'comment_content' 'comment_type' 'comment_parent' 'user_ID');,$commentdata = compact('comment_post_ID' 'comment_author' 'comment_author_email' 'comment_author_url' 'comment_content' 'comment_type' 'comment_parent' 'user_ID');,$commentdata = compact('comment_post_ID' 'comment_author' 'comment_author_email' 'comment_author_url' 'comment_content' 'comment_type' 'comment_parent' 'user_ID');
,,
$comment_id = wp_new_comment( $commentdata );,$comment_id = wp_new_comment( $commentdata );,$comment_id = wp_new_comment( $commentdata );
$comment = get_comment($comment_id);,$comment = get_comment($comment_id);,$comment = get_comment($comment_id);
if ( ! $comment ) die('1');,if ( ! $comment ) die('1');,if ( ! $comment ) die('1');
,,
$position = ( isset($_POST['position']) && (int) $_POST['position'] ) ? (int) $_POST['position'] : '-1';,$position = ( isset($_POST['position']) && (int) $_POST['position'] ) ? (int) $_POST['position'] : '-1';,$position = ( isset($_POST['position']) && (int) $_POST['position'] ) ? (int) $_POST['position'] : '-1';
,,
// automatically approve parent comment,// automatically approve parent comment,// automatically approve parent comment
if ( !empty($_POST['approve_parent']) ) {,if ( !empty($_POST['approve_parent']) ) {,if ( !empty($_POST['approve_parent']) ) {
$parent = get_comment( $comment_parent );,$parent = get_comment( $comment_parent );,$parent = get_comment( $comment_parent );
,,
if ( $parent && $parent->comment_approved === '0' && $parent->comment_post_ID == $comment_post_ID ) {,if ( $parent && $parent->comment_approved === '0' && $parent->comment_post_ID == $comment_post_ID ) {,if ( $parent && $parent->comment_approved === '0' && $parent->comment_post_ID == $comment_post_ID ) {
if ( wp_set_comment_status( $parent->comment_ID 'approve' ) ),if ( wp_set_comment_status( $parent->comment_ID 'approve' ) ),if ( wp_set_comment_status( $parent->comment_ID 'approve' ) )
$comment_auto_approved = true;,$comment_auto_approved = true;,$comment_auto_approved = true;
},},}
},},}
,,
ob_start();,ob_start();,ob_start();
if ( 'dashboard' == $_REQUEST['mode'] ) {,if ( 'dashboard' == $_REQUEST['mode'] ) {,if ( 'dashboard' == $_REQUEST['mode'] ) {
require_once( ABSPATH . 'wp-admin/includes/dashboard.php' );,require_once( ABSPATH . 'wp-admin/includes/dashboard.php' );,require_once( ABSPATH . 'wp-admin/includes/dashboard.php' );
_wp_dashboard_recent_comments_row( $comment );,_wp_dashboard_recent_comments_row( $comment );,_wp_dashboard_recent_comments_row( $comment );
} else {,} else {,} else {
if ( 'single' == $_REQUEST['mode'] ) {,if ( 'single' == $_REQUEST['mode'] ) {,if ( 'single' == $_REQUEST['mode'] ) {
$wp_list_table = _get_list_table('WP_Post_Comments_List_Table');,$wp_list_table = _get_list_table('WP_Post_Comments_List_Table');,$wp_list_table = _get_list_table('WP_Post_Comments_List_Table');
} else {,} else {,} else {
$wp_list_table = _get_list_table('WP_Comments_List_Table');,$wp_list_table = _get_list_table('WP_Comments_List_Table');,$wp_list_table = _get_list_table('WP_Comments_List_Table');
},},}
$wp_list_table->single_row( $comment );,$wp_list_table->single_row( $comment );,$wp_list_table->single_row( $comment );
},},}
$comment_list_item = ob_get_contents();,$comment_list_item = ob_get_contents();,$comment_list_item = ob_get_contents();
ob_end_clean();,ob_end_clean();,ob_end_clean();
,,
$response = array(,$response = array(,$response = array(
'what' => 'comment','what' => 'comment','what' => 'comment'
'id' => $comment->comment_ID,'id' => $comment->comment_ID,'id' => $comment->comment_ID
'data' => $comment_list_item,'data' => $comment_list_item,'data' => $comment_list_item
'position' => $position,'position' => $position,'position' => $position
);,);,);
,,
if ( $comment_auto_approved ),if ( $comment_auto_approved ),if ( $comment_auto_approved )
$response['supplemental'] = array( 'parent_approved' => $parent->comment_ID );,$response['supplemental'] = array( 'parent_approved' => $parent->comment_ID );,$response['supplemental'] = array( 'parent_approved' => $parent->comment_ID );
,,
$x = new WP_Ajax_Response();,$x = new WP_Ajax_Response();,$x = new WP_Ajax_Response();
$x->add( $response );,$x->add( $response );,$x->add( $response );
$x->send();,$x->send();,$x->send();
break;,break;,break;
case 'edit-comment' :,case 'edit-comment' :,case 'edit-comment' :
check_ajax_referer( 'replyto-comment' '_ajax_nonce-replyto-comment' );,check_ajax_referer( 'replyto-comment' '_ajax_nonce-replyto-comment' );,check_ajax_referer( 'replyto-comment' '_ajax_nonce-replyto-comment' );
,,
set_current_screen( 'edit-comments' );,set_current_screen( 'edit-comments' );,set_current_screen( 'edit-comments' );
,,
$comment_id = (int) $_POST['comment_ID'];,$comment_id = (int) $_POST['comment_ID'];,$comment_id = (int) $_POST['comment_ID'];
if ( ! current_user_can( 'edit_comment' $comment_id ) ),if ( ! current_user_can( 'edit_comment' $comment_id ) ),if ( ! current_user_can( 'edit_comment' $comment_id ) )
die('-1');,die('-1');,die('-1');
,,
if ( '' == $_POST['content'] ),if ( '' == $_POST['content'] ),if ( '' == $_POST['content'] )
die( __('ERROR: please type a comment.') );,die( __('ERROR: please type a comment.') );,die( __('ERROR: please type a comment.') );
,,
$_POST['comment_status'] = $_POST['status'];,$_POST['comment_status'] = $_POST['status'];,$_POST['comment_status'] = $_POST['status'];
edit_comment();,edit_comment();,edit_comment();
,,
$position = ( isset($_POST['position']) && (int) $_POST['position']) ? (int) $_POST['position'] : '-1';,$position = ( isset($_POST['position']) && (int) $_POST['position']) ? (int) $_POST['position'] : '-1';,$position = ( isset($_POST['position']) && (int) $_POST['position']) ? (int) $_POST['position'] : '-1';
$comments_status = isset($_POST['comments_listing']) ? $_POST['comments_listing'] : '';,$comments_status = isset($_POST['comments_listing']) ? $_POST['comments_listing'] : '';,$comments_status = isset($_POST['comments_listing']) ? $_POST['comments_listing'] : '';
,,
$checkbox = ( isset($_POST['checkbox']) && true == $_POST['checkbox'] ) ? 1 : 0;,$checkbox = ( isset($_POST['checkbox']) && true == $_POST['checkbox'] ) ? 1 : 0;,$checkbox = ( isset($_POST['checkbox']) && true == $_POST['checkbox'] ) ? 1 : 0;
$wp_list_table = _get_list_table( $checkbox ? 'WP_Comments_List_Table' : 'WP_Post_Comments_List_Table' );,$wp_list_table = _get_list_table( $checkbox ? 'WP_Comments_List_Table' : 'WP_Post_Comments_List_Table' );,$wp_list_table = _get_list_table( $checkbox ? 'WP_Comments_List_Table' : 'WP_Post_Comments_List_Table' );
,,
ob_start();,ob_start();,ob_start();
$wp_list_table->single_row( get_comment( $comment_id ) );,$wp_list_table->single_row( get_comment( $comment_id ) );,$wp_list_table->single_row( get_comment( $comment_id ) );
$comment_list_item = ob_get_contents();,$comment_list_item = ob_get_contents();,$comment_list_item = ob_get_contents();
ob_end_clean();,ob_end_clean();,ob_end_clean();
,,
$x = new WP_Ajax_Response();,$x = new WP_Ajax_Response();,$x = new WP_Ajax_Response();
,,
$x->add( array(,$x->add( array(,$x->add( array(
'what' => 'edit_comment','what' => 'edit_comment','what' => 'edit_comment'
'id' => $comment->comment_ID,'id' => $comment->comment_ID,'id' => $comment->comment_ID
'data' => $comment_list_item,'data' => $comment_list_item,'data' => $comment_list_item
'position' => $position,'position' => $position,'position' => $position
));,));,));
,,
$x->send();,$x->send();,$x->send();
break;,break;,break;
case 'add-menu-item' :,case 'add-menu-item' :,case 'add-menu-item' :
if ( ! current_user_can( 'edit_theme_options' ) ),if ( ! current_user_can( 'edit_theme_options' ) ),if ( ! current_user_can( 'edit_theme_options' ) )
die('-1');,die('-1');,die('-1');
,,
check_ajax_referer( 'add-menu_item' 'menu-settings-column-nonce' );,check_ajax_referer( 'add-menu_item' 'menu-settings-column-nonce' );,check_ajax_referer( 'add-menu_item' 'menu-settings-column-nonce' );
,,
require_once ABSPATH . 'wp-admin/includes/nav-menu.php';,require_once ABSPATH . 'wp-admin/includes/nav-menu.php';,require_once ABSPATH . 'wp-admin/includes/nav-menu.php';
,,
// For performance reasons we omit some object properties from the checklist.,// For performance reasons we omit some object properties from the checklist.,// For performance reasons we omit some object properties from the checklist.
// The following is a hacky way to restore them when adding non-custom items.,// The following is a hacky way to restore them when adding non-custom items.,// The following is a hacky way to restore them when adding non-custom items.
,,
$menu_items_data = array();,$menu_items_data = array();,$menu_items_data = array();
foreach ( (array) $_POST['menu-item'] as $menu_item_data ) {,foreach ( (array) $_POST['menu-item'] as $menu_item_data ) {,foreach ( (array) $_POST['menu-item'] as $menu_item_data ) {
if (,if (,if (
! empty( $menu_item_data['menu-item-type'] ) &&,! empty( $menu_item_data['menu-item-type'] ) &&,! empty( $menu_item_data['menu-item-type'] ) &&
'custom' != $menu_item_data['menu-item-type'] &&,'custom' != $menu_item_data['menu-item-type'] &&,'custom' != $menu_item_data['menu-item-type'] &&
! empty( $menu_item_data['menu-item-object-id'] ),! empty( $menu_item_data['menu-item-object-id'] ),! empty( $menu_item_data['menu-item-object-id'] )
) {,) {,) {
switch( $menu_item_data['menu-item-type'] ) {,switch( $menu_item_data['menu-item-type'] ) {,switch( $menu_item_data['menu-item-type'] ) {
case 'post_type' :,case 'post_type' :,case 'post_type' :
$_object = get_post( $menu_item_data['menu-item-object-id'] );,$_object = get_post( $menu_item_data['menu-item-object-id'] );,$_object = get_post( $menu_item_data['menu-item-object-id'] );
break;,break;,break;
,,
case 'taxonomy' :,case 'taxonomy' :,case 'taxonomy' :
$_object = get_term( $menu_item_data['menu-item-object-id'] $menu_item_data['menu-item-object'] );,$_object = get_term( $menu_item_data['menu-item-object-id'] $menu_item_data['menu-item-object'] );,$_object = get_term( $menu_item_data['menu-item-object-id'] $menu_item_data['menu-item-object'] );
break;,break;,break;
},},}
,,
$_menu_items = array_map( 'wp_setup_nav_menu_item' array( $_object ) );,$_menu_items = array_map( 'wp_setup_nav_menu_item' array( $_object ) );,$_menu_items = array_map( 'wp_setup_nav_menu_item' array( $_object ) );
$_menu_item = array_shift( $_menu_items );,$_menu_item = array_shift( $_menu_items );,$_menu_item = array_shift( $_menu_items );
,,
// Restore the missing menu item properties,// Restore the missing menu item properties,// Restore the missing menu item properties
$menu_item_data['menu-item-description'] = $_menu_item->description;,$menu_item_data['menu-item-description'] = $_menu_item->description;,$menu_item_data['menu-item-description'] = $_menu_item->description;
},},}
,,
$menu_items_data[] = $menu_item_data;,$menu_items_data[] = $menu_item_data;,$menu_items_data[] = $menu_item_data;
},},}
,,
$item_ids = wp_save_nav_menu_items( 0 $menu_items_data );,$item_ids = wp_save_nav_menu_items( 0 $menu_items_data );,$item_ids = wp_save_nav_menu_items( 0 $menu_items_data );
if ( is_wp_error( $item_ids ) ),if ( is_wp_error( $item_ids ) ),if ( is_wp_error( $item_ids ) )
die('-1');,die('-1');,die('-1');
,,
foreach ( (array) $item_ids as $menu_item_id ) {,foreach ( (array) $item_ids as $menu_item_id ) {,foreach ( (array) $item_ids as $menu_item_id ) {
$menu_obj = get_post( $menu_item_id );,$menu_obj = get_post( $menu_item_id );,$menu_obj = get_post( $menu_item_id );
if ( ! empty( $menu_obj->ID ) ) {,if ( ! empty( $menu_obj->ID ) ) {,if ( ! empty( $menu_obj->ID ) ) {
$menu_obj = wp_setup_nav_menu_item( $menu_obj );,$menu_obj = wp_setup_nav_menu_item( $menu_obj );,$menu_obj = wp_setup_nav_menu_item( $menu_obj );
$menu_obj->label = $menu_obj->title; // don't show "(pending)" in ajax-added items,$menu_obj->label = $menu_obj->title; // don't show "(pending)" in ajax-added items,$menu_obj->label = $menu_obj->title; // don't show "(pending)" in ajax-added items
$menu_items[] = $menu_obj;,$menu_items[] = $menu_obj;,$menu_items[] = $menu_obj;
},},}
},},}
,,
if ( ! empty( $menu_items ) ) {,if ( ! empty( $menu_items ) ) {,if ( ! empty( $menu_items ) ) {
$args = array(,$args = array(,$args = array(
'after' => '','after' => '','after' => ''
'before' => '','before' => '','before' => ''
'link_after' => '','link_after' => '','link_after' => ''
'link_before' => '','link_before' => '','link_before' => ''
'walker' => new Walker_Nav_Menu_Edit,'walker' => new Walker_Nav_Menu_Edit,'walker' => new Walker_Nav_Menu_Edit
);,);,);
echo walk_nav_menu_tree( $menu_items 0 (object) $args );,echo walk_nav_menu_tree( $menu_items 0 (object) $args );,echo walk_nav_menu_tree( $menu_items 0 (object) $args );
},},}
break;,break;,break;
case 'add-meta' :,case 'add-meta' :,case 'add-meta' :
check_ajax_referer( 'add-meta' '_ajax_nonce-add-meta' );,check_ajax_referer( 'add-meta' '_ajax_nonce-add-meta' );,check_ajax_referer( 'add-meta' '_ajax_nonce-add-meta' );
$c = 0;,$c = 0;,$c = 0;
$pid = (int) $_POST['post_id'];,$pid = (int) $_POST['post_id'];,$pid = (int) $_POST['post_id'];
$post = get_post( $pid );,$post = get_post( $pid );,$post = get_post( $pid );
,,
if ( isset($_POST['metakeyselect']) || isset($_POST['metakeyinput']) ) {,if ( isset($_POST['metakeyselect']) || isset($_POST['metakeyinput']) ) {,if ( isset($_POST['metakeyselect']) || isset($_POST['metakeyinput']) ) {
if ( !current_user_can( 'edit_post' $pid ) ),if ( !current_user_can( 'edit_post' $pid ) ),if ( !current_user_can( 'edit_post' $pid ) )
die('-1');,die('-1');,die('-1');
if ( isset($_POST['metakeyselect']) && '#NONE#' == $_POST['metakeyselect'] && empty($_POST['metakeyinput']) ),if ( isset($_POST['metakeyselect']) && '#NONE#' == $_POST['metakeyselect'] && empty($_POST['metakeyinput']) ),if ( isset($_POST['metakeyselect']) && '#NONE#' == $_POST['metakeyselect'] && empty($_POST['metakeyinput']) )
die('1');,die('1');,die('1');
if ( $post->post_status == 'auto-draft' ) {,if ( $post->post_status == 'auto-draft' ) {,if ( $post->post_status == 'auto-draft' ) {
$save_POST = $_POST; // Backup $_POST,$save_POST = $_POST; // Backup $_POST,$save_POST = $_POST; // Backup $_POST
$_POST = array(); // Make it empty for edit_post(),$_POST = array(); // Make it empty for edit_post(),$_POST = array(); // Make it empty for edit_post()
$_POST['action'] = 'draft'; // Warning fix,$_POST['action'] = 'draft'; // Warning fix,$_POST['action'] = 'draft'; // Warning fix
$_POST['post_ID'] = $pid;,$_POST['post_ID'] = $pid;,$_POST['post_ID'] = $pid;
$_POST['post_type'] = $post->post_type;,$_POST['post_type'] = $post->post_type;,$_POST['post_type'] = $post->post_type;
$_POST['post_status'] = 'draft';,$_POST['post_status'] = 'draft';,$_POST['post_status'] = 'draft';
$now = current_time('timestamp' 1);,$now = current_time('timestamp' 1);,$now = current_time('timestamp' 1);
$_POST['post_title'] = sprintf('Draft created on %s at %s' date(get_option('date_format') $now) date(get_option('time_format') $now));,$_POST['post_title'] = sprintf('Draft created on %s at %s' date(get_option('date_format') $now) date(get_option('time_format') $now));,$_POST['post_title'] = sprintf('Draft created on %s at %s' date(get_option('date_format') $now) date(get_option('time_format') $now));
,,
if ( $pid = edit_post() ) {,if ( $pid = edit_post() ) {,if ( $pid = edit_post() ) {
if ( is_wp_error( $pid ) ) {,if ( is_wp_error( $pid ) ) {,if ( is_wp_error( $pid ) ) {
$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(
'what' => 'meta','what' => 'meta','what' => 'meta'
'data' => $pid,'data' => $pid,'data' => $pid
) );,) );,) );
$x->send();,$x->send();,$x->send();
},},}
$_POST = $save_POST; // Now we can restore original $_POST again,$_POST = $save_POST; // Now we can restore original $_POST again,$_POST = $save_POST; // Now we can restore original $_POST again
if ( !$mid = add_meta( $pid ) ),if ( !$mid = add_meta( $pid ) ),if ( !$mid = add_meta( $pid ) )
die(__('Please provide a custom field value.'));,die(__('Please provide a custom field value.'));,die(__('Please provide a custom field value.'));
} else {,} else {,} else {
die('0');,die('0');,die('0');
},},}
} else if ( !$mid = add_meta( $pid ) ) {,} else if ( !$mid = add_meta( $pid ) ) {,} else if ( !$mid = add_meta( $pid ) ) {
die(__('Please provide a custom field value.'));,die(__('Please provide a custom field value.'));,die(__('Please provide a custom field value.'));
},},}
,,
$meta = get_metadata_by_mid( 'post' $mid );,$meta = get_metadata_by_mid( 'post' $mid );,$meta = get_metadata_by_mid( 'post' $mid );
$pid = (int) $meta->post_id;,$pid = (int) $meta->post_id;,$pid = (int) $meta->post_id;
$meta = get_object_vars( $meta );,$meta = get_object_vars( $meta );,$meta = get_object_vars( $meta );
$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(
'what' => 'meta','what' => 'meta','what' => 'meta'
'id' => $mid,'id' => $mid,'id' => $mid
'data' => _list_meta_row( $meta $c ),'data' => _list_meta_row( $meta $c ),'data' => _list_meta_row( $meta $c )
'position' => 1,'position' => 1,'position' => 1
'supplemental' => array('postid' => $pid),'supplemental' => array('postid' => $pid),'supplemental' => array('postid' => $pid)
) );,) );,) );
} else { // Update?,} else { // Update?,} else { // Update?
$mid = (int) key( $_POST['meta'] );,$mid = (int) key( $_POST['meta'] );,$mid = (int) key( $_POST['meta'] );
$key = stripslashes( $_POST['meta'][$mid]['key'] );,$key = stripslashes( $_POST['meta'][$mid]['key'] );,$key = stripslashes( $_POST['meta'][$mid]['key'] );
$value = stripslashes( $_POST['meta'][$mid]['value'] );,$value = stripslashes( $_POST['meta'][$mid]['value'] );,$value = stripslashes( $_POST['meta'][$mid]['value'] );
if ( '' == trim($key) ),if ( '' == trim($key) ),if ( '' == trim($key) )
die(__('Please provide a custom field name.'));,die(__('Please provide a custom field name.'));,die(__('Please provide a custom field name.'));
if ( '' == trim($value) ),if ( '' == trim($value) ),if ( '' == trim($value) )
die(__('Please provide a custom field value.'));,die(__('Please provide a custom field value.'));,die(__('Please provide a custom field value.'));
if ( ! $meta = get_metadata_by_mid( 'post' $mid ) ),if ( ! $meta = get_metadata_by_mid( 'post' $mid ) ),if ( ! $meta = get_metadata_by_mid( 'post' $mid ) )
die('0'); // if meta doesn't exist,die('0'); // if meta doesn't exist,die('0'); // if meta doesn't exist
if ( is_protected_meta( $meta->meta_key 'post' ) || is_protected_meta( $key 'post' ) ||,if ( is_protected_meta( $meta->meta_key 'post' ) || is_protected_meta( $key 'post' ) ||,if ( is_protected_meta( $meta->meta_key 'post' ) || is_protected_meta( $key 'post' ) ||
! current_user_can( 'edit_post_meta' $meta->post_id $meta->meta_key ) ||,! current_user_can( 'edit_post_meta' $meta->post_id $meta->meta_key ) ||,! current_user_can( 'edit_post_meta' $meta->post_id $meta->meta_key ) ||
! current_user_can( 'edit_post_meta' $meta->post_id $key ) ),! current_user_can( 'edit_post_meta' $meta->post_id $key ) ),! current_user_can( 'edit_post_meta' $meta->post_id $key ) )
die('-1');,die('-1');,die('-1');
if ( $meta->meta_value != $value || $meta->meta_key != $key ) {,if ( $meta->meta_value != $value || $meta->meta_key != $key ) {,if ( $meta->meta_value != $value || $meta->meta_key != $key ) {
if ( !$u = update_metadata_by_mid( 'post' $mid $value $key ) ),if ( !$u = update_metadata_by_mid( 'post' $mid $value $key ) ),if ( !$u = update_metadata_by_mid( 'post' $mid $value $key ) )
die('0'); // We know meta exists; we also know it's unchanged (or DB error in which case there are bigger problems).,die('0'); // We know meta exists; we also know it's unchanged (or DB error in which case there are bigger problems).,die('0'); // We know meta exists; we also know it's unchanged (or DB error in which case there are bigger problems).
},},}
,,
$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(
'what' => 'meta','what' => 'meta','what' => 'meta'
'id' => $mid 'old_id' => $mid,'id' => $mid 'old_id' => $mid,'id' => $mid 'old_id' => $mid
'data' => _list_meta_row( array(,'data' => _list_meta_row( array(,'data' => _list_meta_row( array(
'meta_key' => $key,'meta_key' => $key,'meta_key' => $key
'meta_value' => $value,'meta_value' => $value,'meta_value' => $value
'meta_id' => $mid,'meta_id' => $mid,'meta_id' => $mid
) $c ),) $c ),) $c )
'position' => 0,'position' => 0,'position' => 0
'supplemental' => array('postid' => $meta->post_id),'supplemental' => array('postid' => $meta->post_id),'supplemental' => array('postid' => $meta->post_id)
) );,) );,) );
},},}
$x->send();,$x->send();,$x->send();
break;,break;,break;
case 'add-user' :,case 'add-user' :,case 'add-user' :
check_ajax_referer( $action );,check_ajax_referer( $action );,check_ajax_referer( $action );
if ( ! current_user_can('create_users') ),if ( ! current_user_can('create_users') ),if ( ! current_user_can('create_users') )
die('-1');,die('-1');,die('-1');
if ( ! $user_id = edit_user() ) {,if ( ! $user_id = edit_user() ) {,if ( ! $user_id = edit_user() ) {
die('0');,die('0');,die('0');
} elseif ( is_wp_error( $user_id ) ) {,} elseif ( is_wp_error( $user_id ) ) {,} elseif ( is_wp_error( $user_id ) ) {
$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(
'what' => 'user','what' => 'user','what' => 'user'
'id' => $user_id,'id' => $user_id,'id' => $user_id
) );,) );,) );
$x->send();,$x->send();,$x->send();
},},}
$user_object = new WP_User( $user_id );,$user_object = new WP_User( $user_id );,$user_object = new WP_User( $user_id );
,,
$wp_list_table = _get_list_table('WP_Users_List_Table');,$wp_list_table = _get_list_table('WP_Users_List_Table');,$wp_list_table = _get_list_table('WP_Users_List_Table');
,,
$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(
'what' => 'user','what' => 'user','what' => 'user'
'id' => $user_id,'id' => $user_id,'id' => $user_id
'data' => $wp_list_table->single_row( $user_object '' $user_object->roles[0] ),'data' => $wp_list_table->single_row( $user_object '' $user_object->roles[0] ),'data' => $wp_list_table->single_row( $user_object '' $user_object->roles[0] )
'supplemental' => array(,'supplemental' => array(,'supplemental' => array(
'show-link' => sprintf(__( 'User %s added' ) "user-$user_id" $user_object->user_login),'show-link' => sprintf(__( 'User %s added' ) "user-$user_id" $user_object->user_login),'show-link' => sprintf(__( 'User %s added' ) "user-$user_id" $user_object->user_login)
'role' => $user_object->roles[0],'role' => $user_object->roles[0],'role' => $user_object->roles[0]
),),)
) );,) );,) );
$x->send();,$x->send();,$x->send();
break;,break;,break;
case 'autosave' : // The name of this action is hardcoded in edit_post(),case 'autosave' : // The name of this action is hardcoded in edit_post(),case 'autosave' : // The name of this action is hardcoded in edit_post()
define( 'DOING_AUTOSAVE' true );,define( 'DOING_AUTOSAVE' true );,define( 'DOING_AUTOSAVE' true );
,,
$nonce_age = check_ajax_referer( 'autosave' 'autosavenonce' );,$nonce_age = check_ajax_referer( 'autosave' 'autosavenonce' );,$nonce_age = check_ajax_referer( 'autosave' 'autosavenonce' );
,,
$_POST['post_category'] = explode("" $_POST['catslist']);,$_POST['post_category'] = explode("" $_POST['catslist']);,$_POST['post_category'] = explode("" $_POST['catslist']);
if ( $_POST['post_type'] == 'page' || empty($_POST['post_category']) ),if ( $_POST['post_type'] == 'page' || empty($_POST['post_category']) ),if ( $_POST['post_type'] == 'page' || empty($_POST['post_category']) )
unset($_POST['post_category']);,unset($_POST['post_category']);,unset($_POST['post_category']);
,,
$do_autosave = (bool) $_POST['autosave'];,$do_autosave = (bool) $_POST['autosave'];,$do_autosave = (bool) $_POST['autosave'];
$do_lock = true;,$do_lock = true;,$do_lock = true;
,,
$data = $alert = '';,$data = $alert = '';,$data = $alert = '';
/* translators: draft saved date format see http://php.net/date */,/* translators: draft saved date format see http://php.net/date */,/* translators: draft saved date format see http://php.net/date */
$draft_saved_date_format = __('g:i:s a');,$draft_saved_date_format = __('g:i:s a');,$draft_saved_date_format = __('g:i:s a');
/* translators: %s: date and time */,/* translators: %s: date and time */,/* translators: %s: date and time */
$message = sprintf( __('Draft saved at %s.') date_i18n( $draft_saved_date_format ) );,$message = sprintf( __('Draft saved at %s.') date_i18n( $draft_saved_date_format ) );,$message = sprintf( __('Draft saved at %s.') date_i18n( $draft_saved_date_format ) );
,,
$supplemental = array();,$supplemental = array();,$supplemental = array();
if ( isset($login_grace_period) ),if ( isset($login_grace_period) ),if ( isset($login_grace_period) )
$alert .= sprintf( __('Your login has expired. Please open a new browser window and log in again. ') add_query_arg( 'interim-login' 1 wp_login_url() ) );,$alert .= sprintf( __('Your login has expired. Please open a new browser window and log in again. ') add_query_arg( 'interim-login' 1 wp_login_url() ) );,$alert .= sprintf( __('Your login has expired. Please open a new browser window and log in again. ') add_query_arg( 'interim-login' 1 wp_login_url() ) );
,,
$id = $revision_id = 0;,$id = $revision_id = 0;,$id = $revision_id = 0;
,,
$post_ID = (int) $_POST['post_ID'];,$post_ID = (int) $_POST['post_ID'];,$post_ID = (int) $_POST['post_ID'];
$_POST['ID'] = $post_ID;,$_POST['ID'] = $post_ID;,$_POST['ID'] = $post_ID;
$post = get_post($post_ID);,$post = get_post($post_ID);,$post = get_post($post_ID);
if ( 'auto-draft' == $post->post_status ),if ( 'auto-draft' == $post->post_status ),if ( 'auto-draft' == $post->post_status )
$_POST['post_status'] = 'draft';,$_POST['post_status'] = 'draft';,$_POST['post_status'] = 'draft';
,,
if ( $last = wp_check_post_lock( $post->ID ) ) {,if ( $last = wp_check_post_lock( $post->ID ) ) {,if ( $last = wp_check_post_lock( $post->ID ) ) {
$do_autosave = $do_lock = false;,$do_autosave = $do_lock = false;,$do_autosave = $do_lock = false;
,,
$last_user = get_userdata( $last );,$last_user = get_userdata( $last );,$last_user = get_userdata( $last );
$last_user_name = $last_user ? $last_user->display_name : __( 'Someone' );,$last_user_name = $last_user ? $last_user->display_name : __( 'Someone' );,$last_user_name = $last_user ? $last_user->display_name : __( 'Someone' );
$data = __( 'Autosave disabled.' );,$data = __( 'Autosave disabled.' );,$data = __( 'Autosave disabled.' );
,,
$supplemental['disable_autosave'] = 'disable';,$supplemental['disable_autosave'] = 'disable';,$supplemental['disable_autosave'] = 'disable';
$alert .= sprintf( __( '%s is currently editing this article. If you update it you will overwrite the changes.' ) esc_html( $last_user_name ) );,$alert .= sprintf( __( '%s is currently editing this article. If you update it you will overwrite the changes.' ) esc_html( $last_user_name ) );,$alert .= sprintf( __( '%s is currently editing this article. If you update it you will overwrite the changes.' ) esc_html( $last_user_name ) );
},},}
,,
if ( 'page' == $post->post_type ) {,if ( 'page' == $post->post_type ) {,if ( 'page' == $post->post_type ) {
if ( !current_user_can('edit_page' $post_ID) ),if ( !current_user_can('edit_page' $post_ID) ),if ( !current_user_can('edit_page' $post_ID) )
die(__('You are not allowed to edit this page.'));,die(__('You are not allowed to edit this page.'));,die(__('You are not allowed to edit this page.'));
} else {,} else {,} else {
if ( !current_user_can('edit_post' $post_ID) ),if ( !current_user_can('edit_post' $post_ID) ),if ( !current_user_can('edit_post' $post_ID) )
die(__('You are not allowed to edit this post.'));,die(__('You are not allowed to edit this post.'));,die(__('You are not allowed to edit this post.'));
},},}
,,
if ( $do_autosave ) {,if ( $do_autosave ) {,if ( $do_autosave ) {
// Drafts and auto-drafts are just overwritten by autosave,// Drafts and auto-drafts are just overwritten by autosave,// Drafts and auto-drafts are just overwritten by autosave
if ( 'auto-draft' == $post->post_status || 'draft' == $post->post_status ) {,if ( 'auto-draft' == $post->post_status || 'draft' == $post->post_status ) {,if ( 'auto-draft' == $post->post_status || 'draft' == $post->post_status ) {
$id = edit_post();,$id = edit_post();,$id = edit_post();
} else { // Non drafts are not overwritten. The autosave is stored in a special post revision.,} else { // Non drafts are not overwritten. The autosave is stored in a special post revision.,} else { // Non drafts are not overwritten. The autosave is stored in a special post revision.
$revision_id = wp_create_post_autosave( $post->ID );,$revision_id = wp_create_post_autosave( $post->ID );,$revision_id = wp_create_post_autosave( $post->ID );
if ( is_wp_error($revision_id) ),if ( is_wp_error($revision_id) ),if ( is_wp_error($revision_id) )
$id = $revision_id;,$id = $revision_id;,$id = $revision_id;
else,else,else
$id = $post->ID;,$id = $post->ID;,$id = $post->ID;
},},}
$data = $message;,$data = $message;,$data = $message;
} else {,} else {,} else {
if ( ! empty( $_POST['auto_draft'] ) ),if ( ! empty( $_POST['auto_draft'] ) ),if ( ! empty( $_POST['auto_draft'] ) )
$id = 0; // This tells us it didn't actually save,$id = 0; // This tells us it didn't actually save,$id = 0; // This tells us it didn't actually save
else,else,else
$id = $post->ID;,$id = $post->ID;,$id = $post->ID;
},},}
,,
if ( $do_lock && empty( $_POST['auto_draft'] ) && $id && is_numeric( $id ) ) {,if ( $do_lock && empty( $_POST['auto_draft'] ) && $id && is_numeric( $id ) ) {,if ( $do_lock && empty( $_POST['auto_draft'] ) && $id && is_numeric( $id ) ) {
$lock_result = wp_set_post_lock( $id );,$lock_result = wp_set_post_lock( $id );,$lock_result = wp_set_post_lock( $id );
$supplemental['active-post-lock'] = implode( ':' $lock_result );,$supplemental['active-post-lock'] = implode( ':' $lock_result );,$supplemental['active-post-lock'] = implode( ':' $lock_result );
},},}
,,
if ( $nonce_age == 2 ) {,if ( $nonce_age == 2 ) {,if ( $nonce_age == 2 ) {
$supplemental['replace-autosavenonce'] = wp_create_nonce('autosave');,$supplemental['replace-autosavenonce'] = wp_create_nonce('autosave');,$supplemental['replace-autosavenonce'] = wp_create_nonce('autosave');
$supplemental['replace-getpermalinknonce'] = wp_create_nonce('getpermalink');,$supplemental['replace-getpermalinknonce'] = wp_create_nonce('getpermalink');,$supplemental['replace-getpermalinknonce'] = wp_create_nonce('getpermalink');
$supplemental['replace-samplepermalinknonce'] = wp_create_nonce('samplepermalink');,$supplemental['replace-samplepermalinknonce'] = wp_create_nonce('samplepermalink');,$supplemental['replace-samplepermalinknonce'] = wp_create_nonce('samplepermalink');
$supplemental['replace-closedpostboxesnonce'] = wp_create_nonce('closedpostboxes');,$supplemental['replace-closedpostboxesnonce'] = wp_create_nonce('closedpostboxes');,$supplemental['replace-closedpostboxesnonce'] = wp_create_nonce('closedpostboxes');
$supplemental['replace-_ajax_linking_nonce'] = wp_create_nonce( 'internal-linking' );,$supplemental['replace-_ajax_linking_nonce'] = wp_create_nonce( 'internal-linking' );,$supplemental['replace-_ajax_linking_nonce'] = wp_create_nonce( 'internal-linking' );
if ( $id ) {,if ( $id ) {,if ( $id ) {
if ( $_POST['post_type'] == 'post' ),if ( $_POST['post_type'] == 'post' ),if ( $_POST['post_type'] == 'post' )
$supplemental['replace-_wpnonce'] = wp_create_nonce('update-post_' . $id);,$supplemental['replace-_wpnonce'] = wp_create_nonce('update-post_' . $id);,$supplemental['replace-_wpnonce'] = wp_create_nonce('update-post_' . $id);
elseif ( $_POST['post_type'] == 'page' ),elseif ( $_POST['post_type'] == 'page' ),elseif ( $_POST['post_type'] == 'page' )
$supplemental['replace-_wpnonce'] = wp_create_nonce('update-page_' . $id);,$supplemental['replace-_wpnonce'] = wp_create_nonce('update-page_' . $id);,$supplemental['replace-_wpnonce'] = wp_create_nonce('update-page_' . $id);
},},}
},},}
,,
if ( ! empty($alert) ),if ( ! empty($alert) ),if ( ! empty($alert) )
$supplemental['alert'] = $alert;,$supplemental['alert'] = $alert;,$supplemental['alert'] = $alert;
,,
$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(,$x = new WP_Ajax_Response( array(
'what' => 'autosave','what' => 'autosave','what' => 'autosave'
'id' => $id,'id' => $id,'id' => $id
'data' => $id ? $data : '','data' => $id ? $data : '','data' => $id ? $data : ''
'supplemental' => $supplemental,'supplemental' => $supplemental,'supplemental' => $supplemental
) );,) );,) );
$x->send();,$x->send();,$x->send();
break;,break;,break;
case 'closed-postboxes' :,case 'closed-postboxes' :,case 'closed-postboxes' :
check_ajax_referer( 'closedpostboxes' 'closedpostboxesnonce' );,check_ajax_referer( 'closedpostboxes' 'closedpostboxesnonce' );,check_ajax_referer( 'closedpostboxes' 'closedpostboxesnonce' );
$closed = isset( $_POST['closed'] ) ? explode( '' $_POST['closed']) : array();,$closed = isset( $_POST['closed'] ) ? explode( '' $_POST['closed']) : array();,$closed = isset( $_POST['closed'] ) ? explode( '' $_POST['closed']) : array();
$closed = array_filter($closed);,$closed = array_filter($closed);,$closed = array_filter($closed);
,,
$hidden = isset( $_POST['hidden'] ) ? explode( '' $_POST['hidden']) : array();,$hidden = isset( $_POST['hidden'] ) ? explode( '' $_POST['hidden']) : array();,$hidden = isset( $_POST['hidden'] ) ? explode( '' $_POST['hidden']) : array();
$hidden = array_filter($hidden);,$hidden = array_filter($hidden);,$hidden = array_filter($hidden);
,,
$page = isset( $_POST['page'] ) ? $_POST['page'] : '';,$page = isset( $_POST['page'] ) ? $_POST['page'] : '';,$page = isset( $_POST['page'] ) ? $_POST['page'] : '';
,,
if ( $page != sanitize_key( $page ) ),if ( $page != sanitize_key( $page ) ),if ( $page != sanitize_key( $page ) )
die('0');,die('0');,die('0');
,,
if ( ! $user = wp_get_current_user() ),if ( ! $user = wp_get_current_user() ),if ( ! $user = wp_get_current_user() )
die('-1');,die('-1');,die('-1');
,,
if ( is_array($closed) ),if ( is_array($closed) ),if ( is_array($closed) )
update_user_option($user->ID "closedpostboxes_$page" $closed true);,update_user_option($user->ID "closedpostboxes_$page" $closed true);,update_user_option($user->ID "closedpostboxes_$page" $closed true);
,,
if ( is_array($hidden) ) {,if ( is_array($hidden) ) {,if ( is_array($hidden) ) {
$hidden = array_diff( $hidden array('submitdiv' 'linksubmitdiv' 'manage-menu' 'create-menu') ); // postboxes that are always shown,$hidden = array_diff( $hidden array('submitdiv' 'linksubmitdiv' 'manage-menu' 'create-menu') ); // postboxes that are always shown,$hidden = array_diff( $hidden array('submitdiv' 'linksubmitdiv' 'manage-menu' 'create-menu') ); // postboxes that are always shown
update_user_option($user->ID "metaboxhidden_$page" $hidden true);,update_user_option($user->ID "metaboxhidden_$page" $hidden true);,update_user_option($user->ID "metaboxhidden_$page" $hidden true);
},},}
,,
die('1');,die('1');,die('1');
break;,break;,break;
case 'hidden-columns' :,case 'hidden-columns' :,case 'hidden-columns' :
check_ajax_referer( 'screen-options-nonce' 'screenoptionnonce' );,check_ajax_referer( 'screen-options-nonce' 'screenoptionnonce' );,check_ajax_referer( 'screen-options-nonce' 'screenoptionnonce' );
$hidden = isset( $_POST['hidden'] ) ? $_POST['hidden'] : '';,$hidden = isset( $_POST['hidden'] ) ? $_POST['hidden'] : '';,$hidden = isset( $_POST['hidden'] ) ? $_POST['hidden'] : '';
$hidden = explode( '' $_POST['hidden'] );,$hidden = explode( '' $_POST['hidden'] );,$hidden = explode( '' $_POST['hidden'] );
$page = isset( $_POST['page'] ) ? $_POST['page'] : '';,$page = isset( $_POST['page'] ) ? $_POST['page'] : '';,$page = isset( $_POST['page'] ) ? $_POST['page'] : '';
,,
if ( $page != sanitize_key( $page ) ),if ( $page != sanitize_key( $page ) ),if ( $page != sanitize_key( $page ) )
die('0');,die('0');,die('0');
,,
if ( ! $user = wp_get_current_user() ),if ( ! $user = wp_get_current_user() ),if ( ! $user = wp_get_current_user() )
die('-1');,die('-1');,die('-1');
,,
if ( is_array($hidden) ),if ( is_array($hidden) ),if ( is_array($hidden) )
update_user_option($user->ID "manage{$page}columnshidden" $hidden true);,update_user_option($user->ID "manage{$page}columnshidden" $hidden true);,update_user_option($user->ID "manage{$page}columnshidden" $hidden true);
,,
die('1');,die('1');,die('1');
break;,break;,break;
case 'update-welcome-panel' :,case 'update-welcome-panel' :,case 'update-welcome-panel' :
check_ajax_referer( 'welcome-panel-nonce' 'welcomepanelnonce' );,check_ajax_referer( 'welcome-panel-nonce' 'welcomepanelnonce' );,check_ajax_referer( 'welcome-panel-nonce' 'welcomepanelnonce' );
,,
if ( ! current_user_can( 'edit_theme_options' ) ),if ( ! current_user_can( 'edit_theme_options' ) ),if ( ! current_user_can( 'edit_theme_options' ) )
die('-1');,die('-1');,die('-1');
,,
update_user_meta( get_current_user_id() 'show_welcome_panel' empty( $_POST['visible'] ) ? 0 : 1 );,update_user_meta( get_current_user_id() 'show_welcome_panel' empty( $_POST['visible'] ) ? 0 : 1 );,update_user_meta( get_current_user_id() 'show_welcome_panel' empty( $_POST['visible'] ) ? 0 : 1 );
,,
die('1');,die('1');,die('1');
break;,break;,break;
case 'menu-get-metabox' :,case 'menu-get-metabox' :,case 'menu-get-metabox' :
if ( ! current_user_can( 'edit_theme_options' ) ),if ( ! current_user_can( 'edit_theme_options' ) ),if ( ! current_user_can( 'edit_theme_options' ) )
die('-1');,die('-1');,die('-1');
,,
require_once ABSPATH . 'wp-admin/includes/nav-menu.php';,require_once ABSPATH . 'wp-admin/includes/nav-menu.php';,require_once ABSPATH . 'wp-admin/includes/nav-menu.php';
,,
if ( isset( $_POST['item-type'] ) && 'post_type' == $_POST['item-type'] ) {,if ( isset( $_POST['item-type'] ) && 'post_type' == $_POST['item-type'] ) {,if ( isset( $_POST['item-type'] ) && 'post_type' == $_POST['item-type'] ) {
$type = 'posttype';,$type = 'posttype';,$type = 'posttype';
$callback = 'wp_nav_menu_item_post_type_meta_box';,$callback = 'wp_nav_menu_item_post_type_meta_box';,$callback = 'wp_nav_menu_item_post_type_meta_box';
$items = (array) get_post_types( array( 'show_in_nav_menus' => true ) 'object' );,$items = (array) get_post_types( array( 'show_in_nav_menus' => true ) 'object' );,$items = (array) get_post_types( array( 'show_in_nav_menus' => true ) 'object' );
} elseif ( isset( $_POST['item-type'] ) && 'taxonomy' == $_POST['item-type'] ) {,} elseif ( isset( $_POST['item-type'] ) && 'taxonomy' == $_POST['item-type'] ) {,} elseif ( isset( $_POST['item-type'] ) && 'taxonomy' == $_POST['item-type'] ) {
$type = 'taxonomy';,$type = 'taxonomy';,$type = 'taxonomy';
$callback = 'wp_nav_menu_item_taxonomy_meta_box';,$callback = 'wp_nav_menu_item_taxonomy_meta_box';,$callback = 'wp_nav_menu_item_taxonomy_meta_box';
$items = (array) get_taxonomies( array( 'show_ui' => true ) 'object' );,$items = (array) get_taxonomies( array( 'show_ui' => true ) 'object' );,$items = (array) get_taxonomies( array( 'show_ui' => true ) 'object' );
},},}
,,
if ( ! empty( $_POST['item-object'] ) && isset( $items[$_POST['item-object']] ) ) {,if ( ! empty( $_POST['item-object'] ) && isset( $items[$_POST['item-object']] ) ) {,if ( ! empty( $_POST['item-object'] ) && isset( $items[$_POST['item-object']] ) ) {
$item = apply_filters( 'nav_menu_meta_box_object' $items[ $_POST['item-object'] ] );,$item = apply_filters( 'nav_menu_meta_box_object' $items[ $_POST['item-object'] ] );,$item = apply_filters( 'nav_menu_meta_box_object' $items[ $_POST['item-object'] ] );
ob_start();,ob_start();,ob_start();
call_user_func_array($callback array(,call_user_func_array($callback array(,call_user_func_array($callback array(
null,null,null
array(,array(,array(
'id' => 'add-' . $item->name,'id' => 'add-' . $item->name,'id' => 'add-' . $item->name
'title' => $item->labels->name,'title' => $item->labels->name,'title' => $item->labels->name
'callback' => $callback,'callback' => $callback,'callback' => $callback
'args' => $item,'args' => $item,'args' => $item
),),)
));,));,));
,,
$markup = ob_get_clean();,$markup = ob_get_clean();,$markup = ob_get_clean();
,,
echo json_encode(array(,echo json_encode(array(,echo json_encode(array(
'replace-id' => $type . '-' . $item->name,'replace-id' => $type . '-' . $item->name,'replace-id' => $type . '-' . $item->name
'markup' => $markup,'markup' => $markup,'markup' => $markup
));,));,));
},},}
,,
exit;,exit;,exit;
break;,break;,break;
case 'menu-quick-search':,case 'menu-quick-search':,case 'menu-quick-search':
if ( ! current_user_can( 'edit_theme_options' ) ),if ( ! current_user_can( 'edit_theme_options' ) ),if ( ! current_user_can( 'edit_theme_options' ) )
die('-1');,die('-1');,die('-1');
,,
require_once ABSPATH . 'wp-admin/includes/nav-menu.php';,require_once ABSPATH . 'wp-admin/includes/nav-menu.php';,require_once ABSPATH . 'wp-admin/includes/nav-menu.php';
,,
_wp_ajax_menu_quick_search( $_REQUEST );,_wp_ajax_menu_quick_search( $_REQUEST );,_wp_ajax_menu_quick_search( $_REQUEST );
,,
exit;,exit;,exit;
break;,break;,break;
case 'wp-link-ajax':,case 'wp-link-ajax':,case 'wp-link-ajax':
check_ajax_referer( 'internal-linking' '_ajax_linking_nonce' );,check_ajax_referer( 'internal-linking' '_ajax_linking_nonce' );,check_ajax_referer( 'internal-linking' '_ajax_linking_nonce' );
,,
$args = array();,$args = array();,$args = array();
,,
if ( isset( $_POST['search'] ) ),if ( isset( $_POST['search'] ) ),if ( isset( $_POST['search'] ) )
$args['s'] = stripslashes( $_POST['search'] );,$args['s'] = stripslashes( $_POST['search'] );,$args['s'] = stripslashes( $_POST['search'] );
$args['pagenum'] = ! empty( $_POST['page'] ) ? absint( $_POST['page'] ) : 1;,$args['pagenum'] = ! empty( $_POST['page'] ) ? absint( $_POST['page'] ) : 1;,$args['pagenum'] = ! empty( $_POST['page'] ) ? absint( $_POST['page'] ) : 1;
,,
require(ABSPATH . WPINC . '/class-wp-editor.php');,require(ABSPATH . WPINC . '/class-wp-editor.php');,require(ABSPATH . WPINC . '/class-wp-editor.php');
$results = _WP_Editors::wp_link_query( $args );,$results = _WP_Editors::wp_link_query( $args );,$results = _WP_Editors::wp_link_query( $args );
,,
if ( ! isset( $results ) ),if ( ! isset( $results ) ),if ( ! isset( $results ) )
die( '0' );,die( '0' );,die( '0' );
,,
echo json_encode( $results );,echo json_encode( $results );,echo json_encode( $results );
echo "\n";,echo "\n";,echo "\n";
,,
exit;,exit;,exit;
break;,break;,break;
case 'menu-locations-save':,case 'menu-locations-save':,case 'menu-locations-save':
if ( ! current_user_can( 'edit_theme_options' ) ),if ( ! current_user_can( 'edit_theme_options' ) ),if ( ! current_user_can( 'edit_theme_options' ) )
die('-1');,die('-1');,die('-1');
check_ajax_referer( 'add-menu_item' 'menu-settings-column-nonce' );,check_ajax_referer( 'add-menu_item' 'menu-settings-column-nonce' );,check_ajax_referer( 'add-menu_item' 'menu-settings-column-nonce' );
if ( ! isset( $_POST['menu-locations'] ) ),if ( ! isset( $_POST['menu-locations'] ) ),if ( ! isset( $_POST['menu-locations'] ) )
die('0');,die('0');,die('0');
set_theme_mod( 'nav_menu_locations' array_map( 'absint' $_POST['menu-locations'] ) );,set_theme_mod( 'nav_menu_locations' array_map( 'absint' $_POST['menu-locations'] ) );,set_theme_mod( 'nav_menu_locations' array_map( 'absint' $_POST['menu-locations'] ) );
die('1');,die('1');,die('1');
break;,break;,break;
case 'meta-box-order':,case 'meta-box-order':,case 'meta-box-order':
check_ajax_referer( 'meta-box-order' );,check_ajax_referer( 'meta-box-order' );,check_ajax_referer( 'meta-box-order' );
$order = isset( $_POST['order'] ) ? (array) $_POST['order'] : false;,$order = isset( $_POST['order'] ) ? (array) $_POST['order'] : false;,$order = isset( $_POST['order'] ) ? (array) $_POST['order'] : false;
$page_columns = isset( $_POST['page_columns'] ) ? $_POST['page_columns'] : 'auto';,$page_columns = isset( $_POST['page_columns'] ) ? $_POST['page_columns'] : 'auto';,$page_columns = isset( $_POST['page_columns'] ) ? $_POST['page_columns'] : 'auto';
,,
if ( $page_columns != 'auto' ),if ( $page_columns != 'auto' ),if ( $page_columns != 'auto' )
$page_columns = (int) $page_columns;,$page_columns = (int) $page_columns;,$page_columns = (int) $page_columns;
,,
$page = isset( $_POST['page'] ) ? $_POST['page'] : '';,$page = isset( $_POST['page'] ) ? $_POST['page'] : '';,$page = isset( $_POST['page'] ) ? $_POST['page'] : '';
,,
if ( $page != sanitize_key( $page ) ),if ( $page != sanitize_key( $page ) ),if ( $page != sanitize_key( $page ) )
die('0');,die('0');,die('0');
,,
if ( ! $user = wp_get_current_user() ),if ( ! $user = wp_get_current_user() ),if ( ! $user = wp_get_current_user() )
die('-1');,die('-1');,die('-1');
,,
if ( $order ),if ( $order ),if ( $order )
update_user_option($user->ID "meta-box-order_$page" $order true);,update_user_option($user->ID "meta-box-order_$page" $order true);,update_user_option($user->ID "meta-box-order_$page" $order true);
,,
if ( $page_columns ),if ( $page_columns ),if ( $page_columns )
update_user_option($user->ID "screen_layout_$page" $page_columns true);,update_user_option($user->ID "screen_layout_$page" $page_columns true);,update_user_option($user->ID "screen_layout_$page" $page_columns true);
,,
die('1');,die('1');,die('1');
break;,break;,break;
case 'get-permalink':,case 'get-permalink':,case 'get-permalink':
check_ajax_referer( 'getpermalink' 'getpermalinknonce' );,check_ajax_referer( 'getpermalink' 'getpermalinknonce' );,check_ajax_referer( 'getpermalink' 'getpermalinknonce' );
$post_id = isset($_POST['post_id'])? intval($_POST['post_id']) : 0;,$post_id = isset($_POST['post_id'])? intval($_POST['post_id']) : 0;,$post_id = isset($_POST['post_id'])? intval($_POST['post_id']) : 0;
die(add_query_arg(array('preview' => 'true') get_permalink($post_id)));,die(add_query_arg(array('preview' => 'true') get_permalink($post_id)));,die(add_query_arg(array('preview' => 'true') get_permalink($post_id)));
break;,break;,break;
case 'sample-permalink':,case 'sample-permalink':,case 'sample-permalink':
check_ajax_referer( 'samplepermalink' 'samplepermalinknonce' );,check_ajax_referer( 'samplepermalink' 'samplepermalinknonce' );,check_ajax_referer( 'samplepermalink' 'samplepermalinknonce' );
$post_id = isset($_POST['post_id'])? intval($_POST['post_id']) : 0;,$post_id = isset($_POST['post_id'])? intval($_POST['post_id']) : 0;,$post_id = isset($_POST['post_id'])? intval($_POST['post_id']) : 0;
$title = isset($_POST['new_title'])? $_POST['new_title'] : '';,$title = isset($_POST['new_title'])? $_POST['new_title'] : '';,$title = isset($_POST['new_title'])? $_POST['new_title'] : '';
$slug = isset($_POST['new_slug'])? $_POST['new_slug'] : null;,$slug = isset($_POST['new_slug'])? $_POST['new_slug'] : null;,$slug = isset($_POST['new_slug'])? $_POST['new_slug'] : null;
die(get_sample_permalink_html($post_id $title $slug));,die(get_sample_permalink_html($post_id $title $slug));,die(get_sample_permalink_html($post_id $title $slug));
break;,break;,break;
case 'inline-save':,case 'inline-save':,case 'inline-save':
check_ajax_referer( 'inlineeditnonce' '_inline_edit' );,check_ajax_referer( 'inlineeditnonce' '_inline_edit' );,check_ajax_referer( 'inlineeditnonce' '_inline_edit' );
,,
if ( ! isset($_POST['post_ID']) || ! ( $post_ID = (int) $_POST['post_ID'] ) ),if ( ! isset($_POST['post_ID']) || ! ( $post_ID = (int) $_POST['post_ID'] ) ),if ( ! isset($_POST['post_ID']) || ! ( $post_ID = (int) $_POST['post_ID'] ) )
exit;,exit;,exit;
,,
if ( 'page' == $_POST['post_type'] ) {,if ( 'page' == $_POST['post_type'] ) {,if ( 'page' == $_POST['post_type'] ) {
if ( ! current_user_can( 'edit_page' $post_ID ) ),if ( ! current_user_can( 'edit_page' $post_ID ) ),if ( ! current_user_can( 'edit_page' $post_ID ) )
die( __('You are not allowed to edit this page.') );,die( __('You are not allowed to edit this page.') );,die( __('You are not allowed to edit this page.') );
} else {,} else {,} else {
if ( ! current_user_can( 'edit_post' $post_ID ) ),if ( ! current_user_can( 'edit_post' $post_ID ) ),if ( ! current_user_can( 'edit_post' $post_ID ) )
die( __('You are not allowed to edit this post.') );,die( __('You are not allowed to edit this post.') );,die( __('You are not allowed to edit this post.') );
},},}
,,
set_current_screen( $_POST['screen'] );,set_current_screen( $_POST['screen'] );,set_current_screen( $_POST['screen'] );
,,
if ( $last = wp_check_post_lock( $post_ID ) ) {,if ( $last = wp_check_post_lock( $post_ID ) ) {,if ( $last = wp_check_post_lock( $post_ID ) ) {
$last_user = get_userdata( $last );,$last_user = get_userdata( $last );,$last_user = get_userdata( $last );
$last_user_name = $last_user ? $last_user->display_name : __( 'Someone' );,$last_user_name = $last_user ? $last_user->display_name : __( 'Someone' );,$last_user_name = $last_user ? $last_user->display_name : __( 'Someone' );
printf( $_POST['post_type'] == 'page' ? __( 'Saving is disabled: %s is currently editing this page.' ) : __( 'Saving is disabled: %s is currently editing this post.' ) esc_html( $last_user_name ) );,printf( $_POST['post_type'] == 'page' ? __( 'Saving is disabled: %s is currently editing this page.' ) : __( 'Saving is disabled: %s is currently editing this post.' ) esc_html( $last_user_name ) );,printf( $_POST['post_type'] == 'page' ? __( 'Saving is disabled: %s is currently editing this page.' ) : __( 'Saving is disabled: %s is currently editing this post.' ) esc_html( $last_user_name ) );
exit;,exit;,exit;
},},}
,,
$data = &$_POST;,$data = &$_POST;,$data = &$_POST;
,,
$post = get_post( $post_ID ARRAY_A );,$post = get_post( $post_ID ARRAY_A );,$post = get_post( $post_ID ARRAY_A );
$post = add_magic_quotes($post); //since it is from db,$post = add_magic_quotes($post); //since it is from db,$post = add_magic_quotes($post); //since it is from db
,,
$data['content'] = $post['post_content'];,$data['content'] = $post['post_content'];,$data['content'] = $post['post_content'];
$data['excerpt'] = $post['post_excerpt'];,$data['excerpt'] = $post['post_excerpt'];,$data['excerpt'] = $post['post_excerpt'];
,,
// rename,// rename,// rename
$data['user_ID'] = $GLOBALS['user_ID'];,$data['user_ID'] = $GLOBALS['user_ID'];,$data['user_ID'] = $GLOBALS['user_ID'];
,,
if ( isset($data['post_parent']) ),if ( isset($data['post_parent']) ),if ( isset($data['post_parent']) )
$data['parent_id'] = $data['post_parent'];,$data['parent_id'] = $data['post_parent'];,$data['parent_id'] = $data['post_parent'];
,,
// status,// status,// status
if ( isset($data['keep_private']) && 'private' == $data['keep_private'] ),if ( isset($data['keep_private']) && 'private' == $data['keep_private'] ),if ( isset($data['keep_private']) && 'private' == $data['keep_private'] )
$data['post_status'] = 'private';,$data['post_status'] = 'private';,$data['post_status'] = 'private';
else,else,else
$data['post_status'] = $data['_status'];,$data['post_status'] = $data['_status'];,$data['post_status'] = $data['_status'];
,,
if ( empty($data['comment_status']) ),if ( empty($data['comment_status']) ),if ( empty($data['comment_status']) )
$data['comment_status'] = 'closed';,$data['comment_status'] = 'closed';,$data['comment_status'] = 'closed';
if ( empty($data['ping_status']) ),if ( empty($data['ping_status']) ),if ( empty($data['ping_status']) )
$data['ping_status'] = 'closed';,$data['ping_status'] = 'closed';,$data['ping_status'] = 'closed';
,,
// update the post,// update the post,// update the post
edit_post();,edit_post();,edit_post();
,,
$wp_list_table = _get_list_table('WP_Posts_List_Table');,$wp_list_table = _get_list_table('WP_Posts_List_Table');,$wp_list_table = _get_list_table('WP_Posts_List_Table');
,,
$mode = $_POST['post_view'];,$mode = $_POST['post_view'];,$mode = $_POST['post_view'];
$wp_list_table->display_rows( array( get_post( $_POST['post_ID'] ) ) );,$wp_list_table->display_rows( array( get_post( $_POST['post_ID'] ) ) );,$wp_list_table->display_rows( array( get_post( $_POST['post_ID'] ) ) );
,,
exit;,exit;,exit;
break;,break;,break;
case 'inline-save-tax':,case 'inline-save-tax':,case 'inline-save-tax':
check_ajax_referer( 'taxinlineeditnonce' '_inline_edit' );,check_ajax_referer( 'taxinlineeditnonce' '_inline_edit' );,check_ajax_referer( 'taxinlineeditnonce' '_inline_edit' );
,,
$taxonomy = sanitize_key( $_POST['taxonomy'] );,$taxonomy = sanitize_key( $_POST['taxonomy'] );,$taxonomy = sanitize_key( $_POST['taxonomy'] );
$tax = get_taxonomy( $taxonomy );,$tax = get_taxonomy( $taxonomy );,$tax = get_taxonomy( $taxonomy );
if ( ! $tax ),if ( ! $tax ),if ( ! $tax )
die( '0' );,die( '0' );,die( '0' );
,,
if ( ! current_user_can( $tax->cap->edit_terms ) ),if ( ! current_user_can( $tax->cap->edit_terms ) ),if ( ! current_user_can( $tax->cap->edit_terms ) )
die( '-1' );,die( '-1' );,die( '-1' );
,,
set_current_screen( 'edit-' . $taxonomy );,set_current_screen( 'edit-' . $taxonomy );,set_current_screen( 'edit-' . $taxonomy );
,,
$wp_list_table = _get_list_table('WP_Terms_List_Table');,$wp_list_table = _get_list_table('WP_Terms_List_Table');,$wp_list_table = _get_list_table('WP_Terms_List_Table');
,,
if ( ! isset($_POST['tax_ID']) || ! ( $id = (int) $_POST['tax_ID'] ) ),if ( ! isset($_POST['tax_ID']) || ! ( $id = (int) $_POST['tax_ID'] ) ),if ( ! isset($_POST['tax_ID']) || ! ( $id = (int) $_POST['tax_ID'] ) )
die(-1);,die(-1);,die(-1);
,,
$tag = get_term( $id $taxonomy );,$tag = get_term( $id $taxonomy );,$tag = get_term( $id $taxonomy );
$_POST['description'] = $tag->description;,$_POST['description'] = $tag->description;,$_POST['description'] = $tag->description;
,,
$updated = wp_update_term($id $taxonomy $_POST);,$updated = wp_update_term($id $taxonomy $_POST);,$updated = wp_update_term($id $taxonomy $_POST);
if ( $updated && !is_wp_error($updated) ) {,if ( $updated && !is_wp_error($updated) ) {,if ( $updated && !is_wp_error($updated) ) {
$tag = get_term( $updated['term_id'] $taxonomy );,$tag = get_term( $updated['term_id'] $taxonomy );,$tag = get_term( $updated['term_id'] $taxonomy );
if ( !$tag || is_wp_error( $tag ) ) {,if ( !$tag || is_wp_error( $tag ) ) {,if ( !$tag || is_wp_error( $tag ) ) {
if ( is_wp_error($tag) && $tag->get_error_message() ),if ( is_wp_error($tag) && $tag->get_error_message() ),if ( is_wp_error($tag) && $tag->get_error_message() )
die( $tag->get_error_message() );,die( $tag->get_error_message() );,die( $tag->get_error_message() );
die( __('Item not updated.') );,die( __('Item not updated.') );,die( __('Item not updated.') );
},},}
,,
echo $wp_list_table->single_row( $tag );,echo $wp_list_table->single_row( $tag );,echo $wp_list_table->single_row( $tag );
} else {,} else {,} else {
if ( is_wp_error($updated) && $updated->get_error_message() ),if ( is_wp_error($updated) && $updated->get_error_message() ),if ( is_wp_error($updated) && $updated->get_error_message() )
die( $updated->get_error_message() );,die( $updated->get_error_message() );,die( $updated->get_error_message() );
die( __('Item not updated.') );,die( __('Item not updated.') );,die( __('Item not updated.') );
},},}
,,
exit;,exit;,exit;
break;,break;,break;
case 'find_posts':,case 'find_posts':,case 'find_posts':
check_ajax_referer( 'find-posts' );,check_ajax_referer( 'find-posts' );,check_ajax_referer( 'find-posts' );
,,
if ( empty($_POST['ps']) ),if ( empty($_POST['ps']) ),if ( empty($_POST['ps']) )
exit;,exit;,exit;
,,
if ( !empty($_POST['post_type']) && in_array( $_POST['post_type'] get_post_types() ) ),if ( !empty($_POST['post_type']) && in_array( $_POST['post_type'] get_post_types() ) ),if ( !empty($_POST['post_type']) && in_array( $_POST['post_type'] get_post_types() ) )
$what = $_POST['post_type'];,$what = $_POST['post_type'];,$what = $_POST['post_type'];
else,else,else
$what = 'post';,$what = 'post';,$what = 'post';
,,
$s = stripslashes($_POST['ps']);,$s = stripslashes($_POST['ps']);,$s = stripslashes($_POST['ps']);
preg_match_all('/".*?("|$)|((?<=[\\s"+])|^)[^\\s"+]+/' $s $matches);,preg_match_all('/".*?("|$)|((?<=[\\s"+])|^)[^\\s"+]+/' $s $matches);,preg_match_all('/".*?("|$)|((?<=[\\s"+])|^)[^\\s"+]+/' $s $matches);
$search_terms = array_map('_search_terms_tidy' $matches[0]);,$search_terms = array_map('_search_terms_tidy' $matches[0]);,$search_terms = array_map('_search_terms_tidy' $matches[0]);
,,
$searchand = $search = '';,$searchand = $search = '';,$searchand = $search = '';
foreach ( (array) $search_terms as $term ) {,foreach ( (array) $search_terms as $term ) {,foreach ( (array) $search_terms as $term ) {
$term = esc_sql( like_escape( $term ) );,$term = esc_sql( like_escape( $term ) );,$term = esc_sql( like_escape( $term ) );
$search .= "{$searchand}(($wpdb->posts.post_title LIKE '%{$term}%') OR ($wpdb->posts.post_content LIKE '%{$term}%'))";,$search .= "{$searchand}(($wpdb->posts.post_title LIKE '%{$term}%') OR ($wpdb->posts.post_content LIKE '%{$term}%'))";,$search .= "{$searchand}(($wpdb->posts.post_title LIKE '%{$term}%') OR ($wpdb->posts.post_content LIKE '%{$term}%'))";
$searchand = ' AND ';,$searchand = ' AND ';,$searchand = ' AND ';
},},}
$term = esc_sql( like_escape( $s ) );,$term = esc_sql( like_escape( $s ) );,$term = esc_sql( like_escape( $s ) );
if ( count($search_terms) > 1 && $search_terms[0] != $s ),if ( count($search_terms) > 1 && $search_terms[0] != $s ),if ( count($search_terms) > 1 && $search_terms[0] != $s )
$search .= " OR ($wpdb->posts.post_title LIKE '%{$term}%') OR ($wpdb->posts.post_content LIKE '%{$term}%')";,$search .= " OR ($wpdb->posts.post_title LIKE '%{$term}%') OR ($wpdb->posts.post_content LIKE '%{$term}%')";,$search .= " OR ($wpdb->posts.post_title LIKE '%{$term}%') OR ($wpdb->posts.post_content LIKE '%{$term}%')";
,,
$posts = $wpdb->get_results( "SELECT ID post_title post_status post_date FROM $wpdb->posts WHERE post_type = '$what' AND post_status IN ('draft' 'publish') AND ($search) ORDER BY post_date_gmt DESC LIMIT 50" );,$posts = $wpdb->get_results( "SELECT ID post_title post_status post_date FROM $wpdb->posts WHERE post_type = '$what' AND post_status IN ('draft' 'publish') AND ($search) ORDER BY post_date_gmt DESC LIMIT 50" );,$posts = $wpdb->get_results( "SELECT ID post_title post_status post_date FROM $wpdb->posts WHERE post_type = '$what' AND post_status IN ('draft' 'publish') AND ($search) ORDER BY post_date_gmt DESC LIMIT 50" );
,,
if ( ! $posts ) {,if ( ! $posts ) {,if ( ! $posts ) {
$posttype = get_post_type_object($what);,$posttype = get_post_type_object($what);,$posttype = get_post_type_object($what);
exit($posttype->labels->not_found);,exit($posttype->labels->not_found);,exit($posttype->labels->not_found);
},},}
,,
$html = ''.__('Title').''.__('Date').''.__('Status').'';,$html = ''.__('Title').''.__('Date').''.__('Status').'';,$html = ''.__('Title').''.__('Date').''.__('Status').'';
foreach ( $posts as $post ) {,foreach ( $posts as $post ) {,foreach ( $posts as $post ) {
,,
switch ( $post->post_status ) {,switch ( $post->post_status ) {,switch ( $post->post_status ) {
case 'publish' :,case 'publish' :,case 'publish' :
case 'private' :,case 'private' :,case 'private' :
$stat = __('Published');,$stat = __('Published');,$stat = __('Published');
break;,break;,break;
case 'future' :,case 'future' :,case 'future' :
$stat = __('Scheduled');,$stat = __('Scheduled');,$stat = __('Scheduled');
break;,break;,break;
case 'pending' :,case 'pending' :,case 'pending' :
$stat = __('Pending Review');,$stat = __('Pending Review');,$stat = __('Pending Review');
break;,break;,break;
case 'draft' :,case 'draft' :,case 'draft' :
$stat = __('Draft');,$stat = __('Draft');,$stat = __('Draft');
break;,break;,break;
},},}
,,
if ( '0000-00-00 00:00:00' == $post->post_date ) {,if ( '0000-00-00 00:00:00' == $post->post_date ) {,if ( '0000-00-00 00:00:00' == $post->post_date ) {
$time = '';,$time = '';,$time = '';
} else {,} else {,} else {
/* translators: date format in table columns see http://php.net/date */,/* translators: date format in table columns see http://php.net/date */,/* translators: date format in table columns see http://php.net/date */
$time = mysql2date(__('Y/m/d') $post->post_date);,$time = mysql2date(__('Y/m/d') $post->post_date);,$time = mysql2date(__('Y/m/d') $post->post_date);
},},}
,,
$html .= '';,$html .= '';,$html .= '';
$html .= ''.esc_html( $post->post_title ).''.esc_html( $time ).''.esc_html( $stat ).''."\n\n";,$html .= ''.esc_html( $post->post_title ).''.esc_html( $time ).''.esc_html( $stat ).''."\n\n";,$html .= ''.esc_html( $post->post_title ).''.esc_html( $time ).''.esc_html( $stat ).''."\n\n";
},},}
$html .= '';,$html .= '';,$html .= '';
,,
$x = new WP_Ajax_Response();,$x = new WP_Ajax_Response();,$x = new WP_Ajax_Response();
$x->add( array(,$x->add( array(,$x->add( array(
'what' => $what,'what' => $what,'what' => $what
'data' => $html,'data' => $html,'data' => $html
));,));,));
$x->send();,$x->send();,$x->send();
,,
break;,break;,break;
case 'widgets-order' :,case 'widgets-order' :,case 'widgets-order' :
check_ajax_referer( 'save-sidebar-widgets' 'savewidgets' );,check_ajax_referer( 'save-sidebar-widgets' 'savewidgets' );,check_ajax_referer( 'save-sidebar-widgets' 'savewidgets' );
,,
if ( !current_user_can('edit_theme_options') ),if ( !current_user_can('edit_theme_options') ),if ( !current_user_can('edit_theme_options') )
die('-1');,die('-1');,die('-1');
,,
unset( $_POST['savewidgets'] $_POST['action'] );,unset( $_POST['savewidgets'] $_POST['action'] );,unset( $_POST['savewidgets'] $_POST['action'] );
,,
// save widgets order for all sidebars,// save widgets order for all sidebars,// save widgets order for all sidebars
if ( is_array($_POST['sidebars']) ) {,if ( is_array($_POST['sidebars']) ) {,if ( is_array($_POST['sidebars']) ) {
$sidebars = array();,$sidebars = array();,$sidebars = array();
foreach ( $_POST['sidebars'] as $key => $val ) {,foreach ( $_POST['sidebars'] as $key => $val ) {,foreach ( $_POST['sidebars'] as $key => $val ) {
$sb = array();,$sb = array();,$sb = array();
if ( !empty($val) ) {,if ( !empty($val) ) {,if ( !empty($val) ) {
$val = explode('' $val);,$val = explode('' $val);,$val = explode('' $val);
foreach ( $val as $k => $v ) {,foreach ( $val as $k => $v ) {,foreach ( $val as $k => $v ) {
if ( strpos($v 'widget-') === false ),if ( strpos($v 'widget-') === false ),if ( strpos($v 'widget-') === false )
continue;,continue;,continue;
,,
$sb[$k] = substr($v strpos($v '_') + 1);,$sb[$k] = substr($v strpos($v '_') + 1);,$sb[$k] = substr($v strpos($v '_') + 1);
},},}
},},}
$sidebars[$key] = $sb;,$sidebars[$key] = $sb;,$sidebars[$key] = $sb;
},},}
wp_set_sidebars_widgets($sidebars);,wp_set_sidebars_widgets($sidebars);,wp_set_sidebars_widgets($sidebars);
die('1');,die('1');,die('1');
},},}
,,
die('-1');,die('-1');,die('-1');
break;,break;,break;
case 'save-widget' :,case 'save-widget' :,case 'save-widget' :
check_ajax_referer( 'save-sidebar-widgets' 'savewidgets' );,check_ajax_referer( 'save-sidebar-widgets' 'savewidgets' );,check_ajax_referer( 'save-sidebar-widgets' 'savewidgets' );
,,
if ( !current_user_can('edit_theme_options') || !isset($_POST['id_base']) ),if ( !current_user_can('edit_theme_options') || !isset($_POST['id_base']) ),if ( !current_user_can('edit_theme_options') || !isset($_POST['id_base']) )
die('-1');,die('-1');,die('-1');
,,
unset( $_POST['savewidgets'] $_POST['action'] );,unset( $_POST['savewidgets'] $_POST['action'] );,unset( $_POST['savewidgets'] $_POST['action'] );
,,
do_action('load-widgets.php');,do_action('load-widgets.php');,do_action('load-widgets.php');
do_action('widgets.php');,do_action('widgets.php');,do_action('widgets.php');
do_action('sidebar_admin_setup');,do_action('sidebar_admin_setup');,do_action('sidebar_admin_setup');
,,
$id_base = $_POST['id_base'];,$id_base = $_POST['id_base'];,$id_base = $_POST['id_base'];
$widget_id = $_POST['widget-id'];,$widget_id = $_POST['widget-id'];,$widget_id = $_POST['widget-id'];
$sidebar_id = $_POST['sidebar'];,$sidebar_id = $_POST['sidebar'];,$sidebar_id = $_POST['sidebar'];
$multi_number = !empty($_POST['multi_number']) ? (int) $_POST['multi_number'] : 0;,$multi_number = !empty($_POST['multi_number']) ? (int) $_POST['multi_number'] : 0;,$multi_number = !empty($_POST['multi_number']) ? (int) $_POST['multi_number'] : 0;
$settings = isset($_POST['widget-' . $id_base]) && is_array($_POST['widget-' . $id_base]) ? $_POST['widget-' . $id_base] : false;,$settings = isset($_POST['widget-' . $id_base]) && is_array($_POST['widget-' . $id_base]) ? $_POST['widget-' . $id_base] : false;,$settings = isset($_POST['widget-' . $id_base]) && is_array($_POST['widget-' . $id_base]) ? $_POST['widget-' . $id_base] : false;
$error = '' . __('An error has occurred. Please reload the page and try again.') . '';,$error = '' . __('An error has occurred. Please reload the page and try again.') . '';,$error = '' . __('An error has occurred. Please reload the page and try again.') . '';
,,
$sidebars = wp_get_sidebars_widgets();,$sidebars = wp_get_sidebars_widgets();,$sidebars = wp_get_sidebars_widgets();
$sidebar = isset($sidebars[$sidebar_id]) ? $sidebars[$sidebar_id] : array();,$sidebar = isset($sidebars[$sidebar_id]) ? $sidebars[$sidebar_id] : array();,$sidebar = isset($sidebars[$sidebar_id]) ? $sidebars[$sidebar_id] : array();
,,
// delete,// delete,// delete
if ( isset($_POST['delete_widget']) && $_POST['delete_widget'] ) {,if ( isset($_POST['delete_widget']) && $_POST['delete_widget'] ) {,if ( isset($_POST['delete_widget']) && $_POST['delete_widget'] ) {
,,
if ( !isset($wp_registered_widgets[$widget_id]) ),if ( !isset($wp_registered_widgets[$widget_id]) ),if ( !isset($wp_registered_widgets[$widget_id]) )
die($error);,die($error);,die($error);
,,
$sidebar = array_diff( $sidebar array($widget_id) );,$sidebar = array_diff( $sidebar array($widget_id) );,$sidebar = array_diff( $sidebar array($widget_id) );
$_POST = array('sidebar' => $sidebar_id 'widget-' . $id_base => array() 'the-widget-id' => $widget_id 'delete_widget' => '1');,$_POST = array('sidebar' => $sidebar_id 'widget-' . $id_base => array() 'the-widget-id' => $widget_id 'delete_widget' => '1');,$_POST = array('sidebar' => $sidebar_id 'widget-' . $id_base => array() 'the-widget-id' => $widget_id 'delete_widget' => '1');
} elseif ( $settings && preg_match( '/__i__|%i%/' key($settings) ) ) {,} elseif ( $settings && preg_match( '/__i__|%i%/' key($settings) ) ) {,} elseif ( $settings && preg_match( '/__i__|%i%/' key($settings) ) ) {
if ( !$multi_number ),if ( !$multi_number ),if ( !$multi_number )
die($error);,die($error);,die($error);
,,
$_POST['widget-' . $id_base] = array( $multi_number => array_shift($settings) );,$_POST['widget-' . $id_base] = array( $multi_number => array_shift($settings) );,$_POST['widget-' . $id_base] = array( $multi_number => array_shift($settings) );
$widget_id = $id_base . '-' . $multi_number;,$widget_id = $id_base . '-' . $multi_number;,$widget_id = $id_base . '-' . $multi_number;
$sidebar[] = $widget_id;,$sidebar[] = $widget_id;,$sidebar[] = $widget_id;
},},}
$_POST['widget-id'] = $sidebar;,$_POST['widget-id'] = $sidebar;,$_POST['widget-id'] = $sidebar;
,,
foreach ( (array) $wp_registered_widget_updates as $name => $control ) {,foreach ( (array) $wp_registered_widget_updates as $name => $control ) {,foreach ( (array) $wp_registered_widget_updates as $name => $control ) {
,,
if ( $name == $id_base ) {,if ( $name == $id_base ) {,if ( $name == $id_base ) {
if ( !is_callable( $control['callback'] ) ),if ( !is_callable( $control['callback'] ) ),if ( !is_callable( $control['callback'] ) )
continue;,continue;,continue;
,,
ob_start();,ob_start();,ob_start();
call_user_func_array( $control['callback'] $control['params'] );,call_user_func_array( $control['callback'] $control['params'] );,call_user_func_array( $control['callback'] $control['params'] );
ob_end_clean();,ob_end_clean();,ob_end_clean();
break;,break;,break;
},},}
},},}
,,
if ( isset($_POST['delete_widget']) && $_POST['delete_widget'] ) {,if ( isset($_POST['delete_widget']) && $_POST['delete_widget'] ) {,if ( isset($_POST['delete_widget']) && $_POST['delete_widget'] ) {
$sidebars[$sidebar_id] = $sidebar;,$sidebars[$sidebar_id] = $sidebar;,$sidebars[$sidebar_id] = $sidebar;
wp_set_sidebars_widgets($sidebars);,wp_set_sidebars_widgets($sidebars);,wp_set_sidebars_widgets($sidebars);
echo "deleted:$widget_id";,echo "deleted:$widget_id";,echo "deleted:$widget_id";
die();,die();,die();
},},}
,,
if ( !empty($_POST['add_new']) ),if ( !empty($_POST['add_new']) ),if ( !empty($_POST['add_new']) )
die();,die();,die();
,,
if ( $form = $wp_registered_widget_controls[$widget_id] ),if ( $form = $wp_registered_widget_controls[$widget_id] ),if ( $form = $wp_registered_widget_controls[$widget_id] )
call_user_func_array( $form['callback'] $form['params'] );,call_user_func_array( $form['callback'] $form['params'] );,call_user_func_array( $form['callback'] $form['params'] );
,,
die();,die();,die();
break;,break;,break;
case 'image-editor':,case 'image-editor':,case 'image-editor':
$attachment_id = intval($_POST['postid']);,$attachment_id = intval($_POST['postid']);,$attachment_id = intval($_POST['postid']);
if ( empty($attachment_id) || !current_user_can('edit_post' $attachment_id) ),if ( empty($attachment_id) || !current_user_can('edit_post' $attachment_id) ),if ( empty($attachment_id) || !current_user_can('edit_post' $attachment_id) )
die('-1');,die('-1');,die('-1');
,,
check_ajax_referer( "image_editor-$attachment_id" );,check_ajax_referer( "image_editor-$attachment_id" );,check_ajax_referer( "image_editor-$attachment_id" );
include_once( ABSPATH . 'wp-admin/includes/image-edit.php' );,include_once( ABSPATH . 'wp-admin/includes/image-edit.php' );,include_once( ABSPATH . 'wp-admin/includes/image-edit.php' );
,,
$msg = false;,$msg = false;,$msg = false;
switch ( $_POST['do'] ) {,switch ( $_POST['do'] ) {,switch ( $_POST['do'] ) {
case 'save' :,case 'save' :,case 'save' :
$msg = wp_save_image($attachment_id);,$msg = wp_save_image($attachment_id);,$msg = wp_save_image($attachment_id);
$msg = json_encode($msg);,$msg = json_encode($msg);,$msg = json_encode($msg);
die($msg);,die($msg);,die($msg);
break;,break;,break;
case 'scale' :,case 'scale' :,case 'scale' :
$msg = wp_save_image($attachment_id);,$msg = wp_save_image($attachment_id);,$msg = wp_save_image($attachment_id);
break;,break;,break;
case 'restore' :,case 'restore' :,case 'restore' :
$msg = wp_restore_image($attachment_id);,$msg = wp_restore_image($attachment_id);,$msg = wp_restore_image($attachment_id);
break;,break;,break;
},},}
,,
wp_image_editor($attachment_id $msg);,wp_image_editor($attachment_id $msg);,wp_image_editor($attachment_id $msg);
die();,die();,die();
break;,break;,break;
case 'set-post-thumbnail':,case 'set-post-thumbnail':,case 'set-post-thumbnail':
$post_ID = intval( $_POST['post_id'] );,$post_ID = intval( $_POST['post_id'] );,$post_ID = intval( $_POST['post_id'] );
if ( !current_user_can( 'edit_post' $post_ID ) ),if ( !current_user_can( 'edit_post' $post_ID ) ),if ( !current_user_can( 'edit_post' $post_ID ) )
die( '-1' );,die( '-1' );,die( '-1' );
$thumbnail_id = intval( $_POST['thumbnail_id'] );,$thumbnail_id = intval( $_POST['thumbnail_id'] );,$thumbnail_id = intval( $_POST['thumbnail_id'] );
,,
check_ajax_referer( "set_post_thumbnail-$post_ID" );,check_ajax_referer( "set_post_thumbnail-$post_ID" );,check_ajax_referer( "set_post_thumbnail-$post_ID" );
,,
if ( $thumbnail_id == '-1' ) {,if ( $thumbnail_id == '-1' ) {,if ( $thumbnail_id == '-1' ) {
if ( delete_post_thumbnail( $post_ID ) ),if ( delete_post_thumbnail( $post_ID ) ),if ( delete_post_thumbnail( $post_ID ) )
die( _wp_post_thumbnail_html() );,die( _wp_post_thumbnail_html() );,die( _wp_post_thumbnail_html() );
else,else,else
die( '0' );,die( '0' );,die( '0' );
},},}
,,
if ( set_post_thumbnail( $post_ID $thumbnail_id ) ),if ( set_post_thumbnail( $post_ID $thumbnail_id ) ),if ( set_post_thumbnail( $post_ID $thumbnail_id ) )
die( _wp_post_thumbnail_html( $thumbnail_id ) );,die( _wp_post_thumbnail_html( $thumbnail_id ) );,die( _wp_post_thumbnail_html( $thumbnail_id ) );
die( '0' );,die( '0' );,die( '0' );
break;,break;,break;
case 'date_format' :,case 'date_format' :,case 'date_format' :
die( date_i18n( sanitize_option( 'date_format' $_POST['date'] ) ) );,die( date_i18n( sanitize_option( 'date_format' $_POST['date'] ) ) );,die( date_i18n( sanitize_option( 'date_format' $_POST['date'] ) ) );
break;,break;,break;
case 'time_format' :,case 'time_format' :,case 'time_format' :
die( date_i18n( sanitize_option( 'time_format' $_POST['date'] ) ) );,die( date_i18n( sanitize_option( 'time_format' $_POST['date'] ) ) );,die( date_i18n( sanitize_option( 'time_format' $_POST['date'] ) ) );
break;,break;,break;
case 'wp-fullscreen-save-post' :,case 'wp-fullscreen-save-post' :,case 'wp-fullscreen-save-post' :
$post_id = isset( $_POST['post_ID'] ) ? (int) $_POST['post_ID'] : 0;,$post_id = isset( $_POST['post_ID'] ) ? (int) $_POST['post_ID'] : 0;,$post_id = isset( $_POST['post_ID'] ) ? (int) $_POST['post_ID'] : 0;
,,
$post = $post_type = null;,$post = $post_type = null;,$post = $post_type = null;
,,
if ( $post_id ),if ( $post_id ),if ( $post_id )
$post = get_post( $post_id );,$post = get_post( $post_id );,$post = get_post( $post_id );
,,
if ( $post ),if ( $post ),if ( $post )
$post_type = $post->post_type;,$post_type = $post->post_type;,$post_type = $post->post_type;
elseif ( isset( $_POST['post_type'] ) && post_type_exists( $_POST['post_type'] ) ),elseif ( isset( $_POST['post_type'] ) && post_type_exists( $_POST['post_type'] ) ),elseif ( isset( $_POST['post_type'] ) && post_type_exists( $_POST['post_type'] ) )
$post_type = $_POST['post_type'];,$post_type = $_POST['post_type'];,$post_type = $_POST['post_type'];
,,
check_ajax_referer('update-' . $post_type . '_' . $post_id '_wpnonce');,check_ajax_referer('update-' . $post_type . '_' . $post_id '_wpnonce');,check_ajax_referer('update-' . $post_type . '_' . $post_id '_wpnonce');
,,
$post_id = edit_post();,$post_id = edit_post();,$post_id = edit_post();
,,
if ( is_wp_error($post_id) ) {,if ( is_wp_error($post_id) ) {,if ( is_wp_error($post_id) ) {
if ( $post_id->get_error_message() ),if ( $post_id->get_error_message() ),if ( $post_id->get_error_message() )
$message = $post_id->get_error_message();,$message = $post_id->get_error_message();,$message = $post_id->get_error_message();
else,else,else
$message = __('Save failed');,$message = __('Save failed');,$message = __('Save failed');
,,
echo json_encode( array( 'message' => $message 'last_edited' => '' ) );,echo json_encode( array( 'message' => $message 'last_edited' => '' ) );,echo json_encode( array( 'message' => $message 'last_edited' => '' ) );
die();,die();,die();
} else {,} else {,} else {
$message = __('Saved.');,$message = __('Saved.');,$message = __('Saved.');
},},}
,,
if ( $post ) {,if ( $post ) {,if ( $post ) {
$last_date = mysql2date( get_option('date_format') $post->post_modified );,$last_date = mysql2date( get_option('date_format') $post->post_modified );,$last_date = mysql2date( get_option('date_format') $post->post_modified );
$last_time = mysql2date( get_option('time_format') $post->post_modified );,$last_time = mysql2date( get_option('time_format') $post->post_modified );,$last_time = mysql2date( get_option('time_format') $post->post_modified );
} else {,} else {,} else {
$last_date = date_i18n( get_option('date_format') );,$last_date = date_i18n( get_option('date_format') );,$last_date = date_i18n( get_option('date_format') );
$last_time = date_i18n( get_option('time_format') );,$last_time = date_i18n( get_option('time_format') );,$last_time = date_i18n( get_option('time_format') );
},},}
,,
if ( $last_id = get_post_meta($post_id '_edit_last' true) ) {,if ( $last_id = get_post_meta($post_id '_edit_last' true) ) {,if ( $last_id = get_post_meta($post_id '_edit_last' true) ) {
$last_user = get_userdata($last_id);,$last_user = get_userdata($last_id);,$last_user = get_userdata($last_id);
$last_edited = sprintf( __('Last edited by %1$s on %2$s at %3$s') esc_html( $last_user->display_name ) $last_date $last_time );,$last_edited = sprintf( __('Last edited by %1$s on %2$s at %3$s') esc_html( $last_user->display_name ) $last_date $last_time );,$last_edited = sprintf( __('Last edited by %1$s on %2$s at %3$s') esc_html( $last_user->display_name ) $last_date $last_time );
} else {,} else {,} else {
$last_edited = sprintf( __('Last edited on %1$s at %2$s') $last_date $last_time );,$last_edited = sprintf( __('Last edited on %1$s at %2$s') $last_date $last_time );,$last_edited = sprintf( __('Last edited on %1$s at %2$s') $last_date $last_time );
},},}
,,
echo json_encode( array( 'message' => $message 'last_edited' => $last_edited ) );,echo json_encode( array( 'message' => $message 'last_edited' => $last_edited ) );,echo json_encode( array( 'message' => $message 'last_edited' => $last_edited ) );
die();,die();,die();
break;,break;,break;
case 'wp-remove-post-lock' :,case 'wp-remove-post-lock' :,case 'wp-remove-post-lock' :
if ( empty( $_POST['post_ID'] ) || empty( $_POST['active_post_lock'] ) ),if ( empty( $_POST['post_ID'] ) || empty( $_POST['active_post_lock'] ) ),if ( empty( $_POST['post_ID'] ) || empty( $_POST['active_post_lock'] ) )
die( '0' );,die( '0' );,die( '0' );
$post_id = (int) $_POST['post_ID'];,$post_id = (int) $_POST['post_ID'];,$post_id = (int) $_POST['post_ID'];
if ( ! $post = get_post( $post_id ) ),if ( ! $post = get_post( $post_id ) ),if ( ! $post = get_post( $post_id ) )
die( '0' );,die( '0' );,die( '0' );
,,
check_ajax_referer( 'update-' . $post->post_type . '_' . $post_id );,check_ajax_referer( 'update-' . $post->post_type . '_' . $post_id );,check_ajax_referer( 'update-' . $post->post_type . '_' . $post_id );
,,
if ( ! current_user_can( 'edit_post' $post_id ) ),if ( ! current_user_can( 'edit_post' $post_id ) ),if ( ! current_user_can( 'edit_post' $post_id ) )
die( '-1' );,die( '-1' );,die( '-1' );
,,
$active_lock = array_map( 'absint' explode( ':' $_POST['active_post_lock'] ) );,$active_lock = array_map( 'absint' explode( ':' $_POST['active_post_lock'] ) );,$active_lock = array_map( 'absint' explode( ':' $_POST['active_post_lock'] ) );
if ( $active_lock[1] != get_current_user_id() ),if ( $active_lock[1] != get_current_user_id() ),if ( $active_lock[1] != get_current_user_id() )
die( '0' );,die( '0' );,die( '0' );
,,
$new_lock = ( time() - apply_filters( 'wp_check_post_lock_window' AUTOSAVE_INTERVAL * 2 ) + 5 ) . ':' . $active_lock[1];,$new_lock = ( time() - apply_filters( 'wp_check_post_lock_window' AUTOSAVE_INTERVAL * 2 ) + 5 ) . ':' . $active_lock[1];,$new_lock = ( time() - apply_filters( 'wp_check_post_lock_window' AUTOSAVE_INTERVAL * 2 ) + 5 ) . ':' . $active_lock[1];
update_post_meta( $post_id '_edit_lock' $new_lock implode( ':' $active_lock ) );,update_post_meta( $post_id '_edit_lock' $new_lock implode( ':' $active_lock ) );,update_post_meta( $post_id '_edit_lock' $new_lock implode( ':' $active_lock ) );
die( '1' );,die( '1' );,die( '1' );
case 'dismiss-wp-pointer' :,case 'dismiss-wp-pointer' :,case 'dismiss-wp-pointer' :
$pointer = $_POST['pointer'];,$pointer = $_POST['pointer'];,$pointer = $_POST['pointer'];
if ( $pointer != sanitize_key( $pointer ) ),if ( $pointer != sanitize_key( $pointer ) ),if ( $pointer != sanitize_key( $pointer ) )
die( '0' );,die( '0' );,die( '0' );
,,
// check_ajax_referer( 'dismiss-pointer_' . $pointer );,// check_ajax_referer( 'dismiss-pointer_' . $pointer );,// check_ajax_referer( 'dismiss-pointer_' . $pointer );
,,
$dismissed = array_filter( explode( '' (string) get_user_meta( get_current_user_id() 'dismissed_wp_pointers' true ) ) );,$dismissed = array_filter( explode( '' (string) get_user_meta( get_current_user_id() 'dismissed_wp_pointers' true ) ) );,$dismissed = array_filter( explode( '' (string) get_user_meta( get_current_user_id() 'dismissed_wp_pointers' true ) ) );
,,
if ( in_array( $pointer $dismissed ) ),if ( in_array( $pointer $dismissed ) ),if ( in_array( $pointer $dismissed ) )
die( '0' );,die( '0' );,die( '0' );
,,
$dismissed[] = $pointer;,$dismissed[] = $pointer;,$dismissed[] = $pointer;
$dismissed = implode( '' $dismissed );,$dismissed = implode( '' $dismissed );,$dismissed = implode( '' $dismissed );
,,
update_user_meta( get_current_user_id() 'dismissed_wp_pointers' $dismissed );,update_user_meta( get_current_user_id() 'dismissed_wp_pointers' $dismissed );,update_user_meta( get_current_user_id() 'dismissed_wp_pointers' $dismissed );
die( '1' );,die( '1' );,die( '1' );
break;,break;,break;
default :,default :,default :
do_action( 'wp_ajax_' . $_POST['action'] );,do_action( 'wp_ajax_' . $_POST['action'] );,do_action( 'wp_ajax_' . $_POST['action'] );
die('0');,die('0');,die('0');
break;,break;,break;
endswitch;,endswitch;,endswitch;
// Default status,// Default status,// Default status
die('-1');,die('-1');,die('-1');
No newline at end of file,No newline at end of file,No newline at end of file
